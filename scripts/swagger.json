{
  "swagger" : "2.0",
  "info" : {
    "description" : "moreDraw - REST",
    "version" : "0.0.1",
    "title" : "moreDraw - REST"
  },
  "host" : "api.moreDraw.com.br",
  "basePath" : "/update/rest",
  "schemes" : [ "https" ],
  "paths" : {
    "/billing" : {
      "get" : {
        "operationId" : "getBilling",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/BillingResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/billing/{billingId}" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "billingId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateBilling",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "operationId" : "patchBillingBillingId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "billingId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateBilling",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/boarding" : {
      "post" : {
        "operationId" : "postBoarding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateBoarding",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateBoarding"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentBoarding"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateBoarding",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateBoarding"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/boarding/wms" : {
      "post" : {
        "operationId" : "postBoardingWMS",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateBoardingWms",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateBoardingWms"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateBoarding",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateBoarding"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/boarding/{boardingOrder}" : {
      "put" : {
        "operationId" : "putBoarding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "boardingOrder",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateBoarding",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateBoarding"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentBoarding"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "boardingOrder",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateBoarding",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateBoarding"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/clients" : {
      "post" : {
        "operationId" : "postClients",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateClient",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ClientResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        }
      },
      "put" : {
        "operationId" : "putClients",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateClient",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ClientResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateClient",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/clients/branches" : {
      "get" : {
        "operationId" : "getClientsBranches",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ClientResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/clients/relational/{token}" : {
      "post" : {
        "operationId" : "postClientsByRelationToken",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Message",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Message"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/clients/test" : {
      "delete" : {
        "operationId" : "deleteClientsTest",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/clients/token/{operatorType}" : {
      "get" : {
        "operationId" : "getClientsToken",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "operatorType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/RelationalToken"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "operatorType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/clients/workers" : {
      "get" : {
        "operationId" : "getClientsWorkers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "begin",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "end",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/WorkersResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "User",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/clients/workers/{userId}" : {
      "delete" : {
        "operationId" : "deleteClientsWorkersUserId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "User",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/docs/{shipmentId}" : {
      "get" : {
        "operationId" : "getDocsByShipmentId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/DocsResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "put" : {
        "operationId" : "putDocsByShipmentId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateDocs",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateDocs"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/DocsResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Docs",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Docs"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/favorites" : {
      "post" : {
        "operationId" : "postFavorites",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateFavorites",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateFavorites"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/FavoritesResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Favorites",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Favorites"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/favorites/destinator" : {
      "get" : {
        "operationId" : "getFavoritesDestinator",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/FavoritesListDestinatorResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Favorites",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Favorites"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/favorites/transporter" : {
      "get" : {
        "operationId" : "getFavoritesTransporter",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/FavoritesListTransporterResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Favorites",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Favorites"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/favorites/{favoriteId}" : {
      "delete" : {
        "operationId" : "deleteFavoritesByFavoriteId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "favoriteId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "favoriteId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Favorites",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Favorites"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/labels" : {
      "post" : {
        "operationId" : "postLabel",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateLabel",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateLabel"
          }
        }, {
          "in" : "body",
          "name" : "CreateLabelConfig",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateLabelConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Label",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Label"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/labels/{shipmentId}/{labelFormat}" : {
      "get" : {
        "operationId" : "getLabelsShipmentIdLabelFormat",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "labelFormat",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/LabelLayoutResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "labelFormat",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/notifications/picking" : {
      "post" : {
        "operationId" : "postNotificationPicking",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateNotificationPicking",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateNotificationPicking"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateNotificationPicking",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateNotificationPicking"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/picture" : {
      "post" : {
        "operationId" : "postUsersPicture",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreatePodPic",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePodPic"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreatePodPic",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePodPic"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/printers" : {
      "get" : {
        "operationId" : "getPrinters",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/PrintersResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "post" : {
        "operationId" : "postPrinters",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreatePrinter",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePrinter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/PrintersResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Printers",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Printers"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/printers/name/{name}" : {
      "get" : {
        "operationId" : "getPrintersName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/PrintersResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/printers/{printerId}" : {
      "put" : {
        "operationId" : "putPrintersPrinterId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "printerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdatePrinter",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdatePrinter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/PrintersResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "delete" : {
        "operationId" : "deletePrintersPrinterId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "printerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "printerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/ratings/{shipmentId}" : {
      "post" : {
        "operationId" : "postRatings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRating",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRating"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRating",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRating"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/regions/{regionId}" : {
      "get" : {
        "operationId" : "getRegionByRegionId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "regionId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/RegionResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "delete" : {
        "operationId" : "deleteRegionByRegionId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "regionId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "regionId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRegion",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRegion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments" : {
      "get" : {
        "operationId" : "getShipments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderNumber",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingCode",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "unitloadsWithNfeKey",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "shipmentId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nfeKey",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "post" : {
        "operationId" : "postShipments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipment"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "201 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/destinator" : {
      "get" : {
        "operationId" : "getShipmentsDestinator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "boarding",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentPacklistResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/destinator/next/{shipmentId}" : {
      "get" : {
        "operationId" : "getShipmentsDestinatorNextShipmentId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "boarding",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Shipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/mobile" : {
      "post" : {
        "operationId" : "postShipmentsMobile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipmentMobile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipmentMobile"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "201 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/shipper" : {
      "get" : {
        "operationId" : "getShipmentsShipper",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "boarding",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transporterFederalTax",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/shipper/finished" : {
      "get" : {
        "operationId" : "getShipmentsShipperFinished",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/shipper/next/{shipmentId}" : {
      "get" : {
        "operationId" : "getShipmentsShipperNextShipmentId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "boarding",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentPacklistResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Shipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/transporter" : {
      "get" : {
        "operationId" : "getShipmentsTransporter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "driver",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "boarding",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transporterFederalTax",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transporterName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateShipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/transporter/next/{shipmentId}" : {
      "get" : {
        "operationId" : "getShipmentsTransporterNextShipmentId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "boarding",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Shipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/transporter/sched" : {
      "get" : {
        "operationId" : "getShipmentsTransporterSched",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/transporter/sum_delivery_address" : {
      "get" : {
        "operationId" : "getShipmentsTransporterSumDelivery",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "begin",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "end",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponseSumDelivery"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/{shipmentId}" : {
      "put" : {
        "operationId" : "putShipmentsByShipmentId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateShipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateShipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Shipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments/{shipmentId}/cancelled" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Shipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "operationId" : "patchShipmentsOrderNumberCancelled",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ShipmentPatchStarted",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShipmentPatchStarted"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      }
    },
    "/shipments/{shipmentId}/sched/{accept}" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accept",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "operationId" : "patchShipmentsShipmentIdSched",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accept",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/shipments/{shipmentId}/started" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Shipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "operationId" : "patchShipmentsShipmentIdStarted",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ShipmentPatchStarted",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShipmentPatchStarted"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentTrackingCode"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/shipments_events/{shipmentId}" : {
      "get" : {
        "operationId" : "getShipmentsEventsByShipmentId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentEventsResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ShipmentEvents",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShipmentEvents"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/shipments_events/{shipmentId}/finished" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Shipment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shipment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "operationId" : "patchShipmentsEventsShipmentIdFinished",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      }
    },
    "/shipments_events/{shipmentId}/{shipmentEventId}" : {
      "get" : {
        "operationId" : "getShipmentsEventsByShipmentIdShipmentEventId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "shipmentEventId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentEventsResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "put" : {
        "operationId" : "putShipmentEventsByShipmentIdShipmentEventId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "shipmentEventId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateShipmentEvents",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateShipmentEvents"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ShipmentEventsResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "shipmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "shipmentEventId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ShipmentEvents",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShipmentEvents"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/storloc" : {
      "get" : {
        "operationId" : "getStorloc",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/StorlocResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "post" : {
        "operationId" : "postStorloc",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateStorloc",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateStorloc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/StorlocResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateStorloc",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateStorloc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/storloc/next/{storlocId}" : {
      "get" : {
        "operationId" : "getStorlocNextStorlocId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "storlocId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/StorlocResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/storloc/{ean}" : {
      "get" : {
        "operationId" : "getStorlocEan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ean",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/StorlocResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "put" : {
        "operationId" : "putStorlocEan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ean",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateStorloc",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateStorloc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/StorlocResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ean",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateStorloc",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateStorloc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/tasks/sign/{userId}" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "operationId" : "patchTasksTaskIdSignUserId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "SignTasks",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SignTasks"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/teams" : {
      "get" : {
        "operationId" : "getTeams",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/TeamResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "post" : {
        "operationId" : "postTeams",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateOrUpdateTeam",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateOrUpdateTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/TeamResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateOrUpdateTeam",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateOrUpdateTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}" : {
      "get" : {
        "operationId" : "getTeamByTeamId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/TeamResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "put" : {
        "operationId" : "putTeamsByTeamId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateOrUpdateTeam",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateOrUpdateTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/TeamResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "delete" : {
        "operationId" : "deleteTeamByTeamId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateOrUpdateTeam",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateOrUpdateTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}/regions" : {
      "post" : {
        "operationId" : "postRegion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRegion",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRegion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/RegionResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "403" : {
            "description" : "403 response",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateOrUpdateTeam",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateOrUpdateTeam"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}/tasks" : {
      "get" : {
        "operationId" : "getTasksByTeamId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/TaskResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Task",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/transport_orders" : {
      "get" : {
        "operationId" : "getTransportOrders",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/UnitloadResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "post" : {
        "operationId" : "postTransportOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateTransportOrder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateTransportOrder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/TransportOrderResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateTransportOrder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateTransportOrder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/transport_orders/request" : {
      "post" : {
        "operationId" : "postTransportOrderRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateTransportOrderRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateTransportOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/UnitloadResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateTransportOrderRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateTransportOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/transport_orders/{number}" : {
      "get" : {
        "operationId" : "getTransportOrderByTransportOrderId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/TransportOrderResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/unitloads" : {
      "get" : {
        "operationId" : "getUnitloads",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "unitloadName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "barCode",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "unitloadId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/UnitloadResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "post" : {
        "operationId" : "postUnitloads",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateUnitload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateUnitload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/UnitloadResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateUnitload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateUnitload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/unitloads/cubi/{barCode}" : {
      "put" : {
        "operationId" : "putUnitloadCubiByBarCode",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "barCode",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateUnitloadCubi",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateUnitloadCubi"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/UnitloadResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "barCode",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/unitloads/next/{unitloadId}" : {
      "get" : {
        "operationId" : "getUnitloadsNextUnitloadId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "unitloadId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "maxState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "minState",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfUnitloadResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "unitloadId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/unitloads/{unitloadId}" : {
      "put" : {
        "operationId" : "putUnitloadByUnitloadId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "unitloadId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateUnitload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateUnitload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/UnitloadResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "unitloadId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/unitloads/{unitloadId}/opened" : {
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "unitloadId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "OpenedUnitload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenedUnitload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "operationId" : "patchUnitloadByUnitloadIdOpened",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "unitloadId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "OpenedUnitload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenedUnitload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/UnitloadResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/users/find" : {
      "get" : {
        "operationId" : "getUsersFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "mobilePhone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "federalTax",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreatePodPic",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePodPic"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/vehicles" : {
      "get" : {
        "operationId" : "getVehicles",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/VehicleResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "post" : {
        "operationId" : "postVehicles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateVehicle",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateVehicle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/VehicleResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "409" : {
            "description" : "409 response",
            "schema" : {
              "$ref" : "#/definitions/Conflict"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateVehicle",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateVehicle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/vehicles/fleet" : {
      "post" : {
        "operationId" : "postVehiclesFleet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateFleet",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateFleet"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/VehicleResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/vehicles/license_plate/{licensePlate}" : {
      "get" : {
        "operationId" : "getVehicleByLicensePlate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "licensePlate",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/VehicleResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "licensePlate",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Vehicle",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Vehicle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "201" : {
            "description" : "201 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/vehicles/{vehicleId}" : {
      "get" : {
        "operationId" : "getVehicleByVehicleId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/VehicleResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "put" : {
        "operationId" : "putVehicleByVehicleId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateVehicle",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateVehicle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/VehicleResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "delete" : {
        "operationId" : "deleteVehicleByVehicleId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vehicleId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateVehicle",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateVehicle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/zone" : {
      "get" : {
        "operationId" : "getZone",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ZoneResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          },
          "404" : {
            "description" : "404 response",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          }
        }
      },
      "post" : {
        "operationId" : "postZone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateZone",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateZone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/ZoneResponseList"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateZone",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateZone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/zone/{zoneId}/picture" : {
      "post" : {
        "operationId" : "postZonePicture",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "zoneId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateZonePicture",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateZonePicture"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Ok"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "500" : {
            "description" : "500 response",
            "schema" : {
              "$ref" : "#/definitions/InternalServer"
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/Unauthorized"
            }
          }
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "zoneId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Docs",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Docs"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "type" : "apiKey",
      "name" : "x-api-key",
      "in" : "header"
    }
  },
  "definitions" : {
    "Address" : {
      "type" : "object",
      "properties" : {
        "addressId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do endereço"
        },
        "createdBy" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do criador do endereço"
        },
        "country" : {
          "type" : "string",
          "description" : "País do endereço"
        },
        "stateName" : {
          "type" : "string",
          "description" : "Nome do estado do endereço"
        },
        "stateUF" : {
          "type" : "string",
          "description" : "UF do estado do endereço"
        },
        "city" : {
          "type" : "string",
          "description" : "Cidade do endereço"
        },
        "prefixCity" : {
          "type" : "string",
          "description" : "Prefixo da cidade do endereço"
        },
        "street" : {
          "type" : "string",
          "description" : "Rua do endereço"
        },
        "addressNumber" : {
          "type" : "string",
          "description" : "Número do endereço"
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "Bairro do endereço"
        },
        "reference" : {
          "type" : "string",
          "description" : "Ponto de referência do endereço"
        },
        "additional" : {
          "type" : "string",
          "description" : "Descrição adicional do endereço"
        },
        "zip" : {
          "type" : "string",
          "description" : "CEP do endereço"
        },
        "plusCode" : {
          "type" : "string",
          "description" : "Google plus code do endereço"
        },
        "locationName" : {
          "type" : "string",
          "description" : "Nome da localidade/local que não possui endereço formal"
        },
        "coordinates" : {
          "type" : "string",
          "description" : "Coordenadas (latitude, longitude) do endereço"
        },
        "latitude" : {
          "type" : "string",
          "description" : "Latitude do endereço"
        },
        "longitude" : {
          "type" : "string",
          "description" : "Longitude do endereço"
        },
        "restrictions" : {
          "type" : "string",
          "description" : "Restrição de entrega/coleta de um endereço"
        }
      }
    },
    "CreateFleet" : {
      "type" : "object",
      "properties" : {
        "licensePlates" : {
          "type" : "array",
          "description" : "Placas dos veículos pertencentes à frota",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateBoardingWms" : {
      "type" : "object",
      "required" : [ "shipments", "vehicleLicensePlate" ],
      "properties" : {
        "vehicleLicensePlate" : {
          "type" : "string",
          "description" : "Placa do veículo"
        },
        "shipments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ShipmentsUnitloads"
          }
        }
      }
    },
    "CreateDocs" : {
      "type" : "object",
      "properties" : {
        "nfeKey" : {
          "type" : "string",
          "description" : "Chave da nota fiscal"
        },
        "cteKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de controle de transporte"
        },
        "mdfeKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de manifesto eletrônico de documento fiscal"
        },
        "insuranceKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de seguro de frete"
        },
        "theftKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de seguro de roubo"
        },
        "cceKey" : {
          "type" : "string",
          "description" : "Chave da carta de correção"
        },
        "ciotCode" : {
          "type" : "string",
          "description" : "Código Identificador da Operação de Transporte"
        },
        "podName" : {
          "type" : "string",
          "description" : "Nome do recebedor"
        },
        "podFederalTax" : {
          "type" : "string",
          "description" : "CPF do recebedor"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ShipmentEventsResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/ShipmentEvents"
        }
      }
    },
    "ShipmentBoarding" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "boardingOrder" : {
              "type" : "string",
              "description" : "Ordem de embarque para o mesmo veiculo"
            },
            "editable" : {
              "type" : "boolean",
              "description" : "Determina se a ordem de embarque pode ser editada"
            },
            "shipmentIds" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "uuid",
                "description" : "ID da remessa de envio"
              }
            }
          }
        }
      }
    },
    "StorlocResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Storloc"
        }
      }
    },
    "FavoritesDestinator" : {
      "type" : "object",
      "properties" : {
        "favoriteId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do favorito"
        },
        "destinator" : {
          "$ref" : "#/definitions/User"
        },
        "labelId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da etiqueta favorita"
        }
      }
    },
    "RelationalToken" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "relationalToken" : {
              "type" : "string",
              "description" : "Token de relacionamento"
            }
          }
        }
      }
    },
    "UnitloadResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "string",
              "description" : "Próxima chave a ser buscada pela paginação"
            },
            "unitloads" : {
              "type" : "array",
              "description" : "Unitizadores",
              "items" : {
                "$ref" : "#/definitions/Unitload"
              }
            }
          }
        }
      }
    },
    "TaskResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Task"
          }
        }
      }
    },
    "SignTasks" : {
      "type" : "object",
      "properties" : {
        "taskId" : {
          "type" : "array",
          "description" : "Tarefas que devem ser assinadas para o determinado usuário",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "ciotCode" : {
          "type" : "string",
          "description" : "Código Identificador da Operação de Transporte"
        },
        "orderIndex" : {
          "type" : "array",
          "description" : "Índice da ordem a ser seguida para entrega",
          "items" : {
            "type" : "number",
            "format" : "int-32"
          }
        }
      }
    },
    "UpdateUnitloadCubi" : {
      "type" : "object",
      "required" : [ "depth", "height", "weight", "width" ],
      "properties" : {
        "width" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Largura do unitizador em milímetros"
        },
        "height" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Altura do unitizador em milímetros"
        },
        "depth" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Profundidade do unitizador em milímetros"
        },
        "weight" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Peso do unitizador em gramas"
        }
      }
    },
    "CreateAddress" : {
      "type" : "object",
      "required" : [ "addressNumber", "city", "country", "neighborhood", "stateName", "stateUF", "street", "zip" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "País do endereço"
        },
        "stateName" : {
          "type" : "string",
          "description" : "Nome do estado do endereço"
        },
        "stateUF" : {
          "type" : "string",
          "description" : "UF do estado do endereço"
        },
        "city" : {
          "type" : "string",
          "description" : "Cidade do endereço"
        },
        "street" : {
          "type" : "string",
          "description" : "Rua do endereço"
        },
        "addressNumber" : {
          "type" : "string",
          "description" : "Número do endereço"
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "Bairro do endereço"
        },
        "reference" : {
          "type" : "string",
          "description" : "Ponto de referência do endereço"
        },
        "additional" : {
          "type" : "string",
          "description" : "Descrição adicional do endereço"
        },
        "zip" : {
          "type" : "string",
          "description" : "CEP do endereço"
        },
        "locationName" : {
          "type" : "string",
          "description" : "Nome da localidade/local que nao possui endereço formal"
        },
        "restrictions" : {
          "type" : "string",
          "description" : "Restrição de entrega/coleta de um endereço"
        },
        "latitude" : {
          "type" : "string",
          "description" : "Latitude do endereço"
        },
        "longitude" : {
          "type" : "string",
          "description" : "Longitude do endereço"
        },
        "plusCode" : {
          "type" : "string",
          "description" : "Google plus code do endereço"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "VehicleResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Vehicle"
        }
      }
    },
    "ShipmentResponseSumDelivery" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/AddressMetrics"
        }
      }
    },
    "FavoritesTransporter" : {
      "type" : "object",
      "properties" : {
        "favoriteId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do favorito"
        },
        "transporter" : {
          "$ref" : "#/definitions/Client"
        },
        "labelId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da etiqueta favorita"
        }
      }
    },
    "CreateStorloc" : {
      "type" : "object",
      "properties" : {
        "storlocs" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "ean" : {
                "type" : "string",
                "description" : "Código de barras"
              },
              "riskClass" : {
                "type" : "string",
                "description" : "Tipo do unitizador aceito, com finalidade de encaixar as regras na matriz de compatibilidade"
              },
              "zoneId" : {
                "type" : "string",
                "description" : "Identificador ou nome da zona que localidade de armazenagem pertence"
              },
              "area" : {
                "type" : "string",
                "description" : "Área da armazenagem"
              },
              "xPos" : {
                "type" : "string",
                "description" : "Posição X da localidade de armazenagem"
              },
              "yPos" : {
                "type" : "string",
                "description" : "Posição Y da localidade de armazenagem"
              },
              "zPos" : {
                "type" : "string",
                "description" : "Posição Z da localidade de armazenagem"
              },
              "rack" : {
                "type" : "string",
                "description" : "Rack da localidade de armazenagem"
              },
              "street" : {
                "type" : "string",
                "description" : "Rua da localidade de armazenagem"
              },
              "type" : {
                "type" : "string",
                "description" : "Tipo da localidade de armazenagem"
              },
              "field" : {
                "type" : "string",
                "description" : "Campo da localidade de armazenagem"
              },
              "index" : {
                "type" : "string",
                "description" : "Índice da localidade de armazenagem"
              },
              "created" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          }
        }
      }
    },
    "Tires" : {
      "type" : "object",
      "properties" : {
        "l1" : {
          "$ref" : "#/definitions/RowTire"
        },
        "l2" : {
          "$ref" : "#/definitions/RowTire"
        },
        "r1" : {
          "$ref" : "#/definitions/RowTire"
        },
        "r2" : {
          "$ref" : "#/definitions/RowTire"
        }
      }
    },
    "CreateBoarding" : {
      "type" : "object",
      "properties" : {
        "taskId" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID do remessa de envio"
          }
        },
        "driverId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do motorista"
        },
        "operatorId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do operador"
        },
        "vehicleId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do veículo"
        },
        "transporterShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Valor do frete da parte da transportadora"
        },
        "shipperShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Preço de envio cobrado do emitente"
        },
        "weightCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Peso calculado da cubagem"
        },
        "measuredCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Medições calculados da cubagem"
        }
      }
    },
    "Favorites" : {
      "type" : "object",
      "properties" : {
        "favoriteId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do favorito"
        },
        "transporter" : {
          "$ref" : "#/definitions/Client"
        },
        "destinator" : {
          "$ref" : "#/definitions/User"
        },
        "labelId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da etiqueta favorita"
        }
      }
    },
    "UpdatePrinter" : {
      "type" : "object",
      "properties" : {
        "macAddress" : {
          "type" : "string",
          "description" : "Endereço MAC"
        },
        "ipAddress" : {
          "type" : "string",
          "description" : "Endereço IP"
        },
        "ipPort" : {
          "type" : "string",
          "description" : "Porta IP"
        },
        "connectionType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo de conexão"
        },
        "inputType" : {
          "type" : "string",
          "description" : "Tipo de entrada"
        }
      }
    },
    "ShipmentPatchStarted" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CreateZonePicture" : {
      "type" : "object",
      "properties" : {
        "picture" : {
          "type" : "string",
          "format" : "binary"
        }
      }
    },
    "ArrayOfUnitloadResponseList" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/UnitloadResponseList"
      }
    },
    "CreateRating" : {
      "type" : "object",
      "properties" : {
        "ratingEmitter" : {
          "type" : "number",
          "format" : "double",
          "description" : "Avaliação do remetente. Quem avalia é o motorista ou destinatário"
        },
        "ratingShipment" : {
          "type" : "number",
          "format" : "double",
          "description" : "Avaliação da qualidade da remessa. Quem avalia é o destinatário"
        },
        "ratingDestinator" : {
          "type" : "number",
          "format" : "double",
          "description" : "Avaliação do destinatário. Quem avalia é o motorista"
        },
        "ratingDriver" : {
          "type" : "number",
          "format" : "double",
          "description" : "Avaliação do motorista. Quem avalia é o destinatário"
        }
      }
    },
    "CreateFavorites" : {
      "type" : "object",
      "properties" : {
        "transporterId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do transportador favorito"
        },
        "destinatorId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do destinatário favorito"
        },
        "labelId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da etiqueta favorita"
        },
        "printerId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da impressora favorita"
        }
      }
    },
    "OpenedUnitload" : {
      "type" : "object",
      "required" : [ "opened" ],
      "properties" : {
        "opened" : {
          "type" : "boolean",
          "description" : "Definição se unitizador esta aberto"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "PrintersResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Printers"
        }
      }
    },
    "Worker" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "companyName" : {
          "type" : "string",
          "description" : "Razão social da empresa"
        },
        "federalTax" : {
          "type" : "string",
          "description" : "CNPJ da empresa"
        },
        "operatorType" : {
          "type" : "string",
          "description" : "Tipo do operador"
        },
        "successfulDeliveries" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de sucesso em entregas"
        },
        "wrongDeliveries" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de entregas com falha"
        },
        "sumShipmentsUnitloads" : {
          "$ref" : "#/definitions/SumShipmentsUnitloads"
        }
      }
    },
    "Team" : {
      "type" : "object",
      "properties" : {
        "teamId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da equipe"
        },
        "teamName" : {
          "type" : "string",
          "description" : "Nome da equipe"
        },
        "workers" : {
          "type" : "array",
          "description" : "Usuarios pertencentes a equipe",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "regions" : {
          "type" : "array",
          "description" : "Regiões pertencentes a equipe",
          "items" : {
            "$ref" : "#/definitions/Region"
          }
        }
      }
    },
    "PostFingerPrint" : {
      "type" : "object",
      "properties" : {
        "latitude" : {
          "type" : "string",
          "description" : "Latitude do endereço"
        },
        "longitude" : {
          "type" : "string",
          "description" : "Longitude do endereço"
        },
        "browser" : {
          "type" : "string",
          "description" : "Navegador no momento do acesso"
        },
        "requestIP" : {
          "type" : "string",
          "description" : "IP do dispositivo da requisição"
        },
        "resolution" : {
          "type" : "string",
          "description" : "Resolução do dispositivo"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "UpdateBoarding" : {
      "type" : "object",
      "properties" : {
        "taskId" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID do remessa de envio"
          }
        },
        "driverId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do motorista"
        },
        "vehicleId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do veículo"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da entrega"
        },
        "transporterShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Valor do frete da parte da transportadora"
        },
        "shipperShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Preço de envio cobrado do emitente"
        },
        "weightCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Peso calculado da cubagem"
        },
        "measuredCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Medições calculados da cubagem"
        }
      }
    },
    "WorkersResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Worker"
          }
        }
      }
    },
    "ShipmentsUnitloads" : {
      "type" : "object",
      "properties" : {
        "nfeKey" : {
          "type" : "string",
          "description" : "Número da nota fiscal eletrônica"
        },
        "unitloads" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "Nome do unitizador"
          }
        }
      }
    },
    "FavoritesListDestinatorResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "array",
          "description" : "Favoritos",
          "items" : {
            "$ref" : "#/definitions/FavoritesDestinator"
          }
        }
      }
    },
    "ClientResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "array",
          "description" : "Lista de clientes relacionados",
          "items" : {
            "$ref" : "#/definitions/Client"
          }
        }
      }
    },
    "Storloc" : {
      "type" : "object",
      "properties" : {
        "ean" : {
          "type" : "string",
          "description" : "Código de barras"
        },
        "zoneId" : {
          "type" : "string",
          "description" : "Tipo do unitizador aceito, com finalidade de encaixar as regras na matriz de compatibilidade"
        },
        "area" : {
          "type" : "string",
          "description" : "Área da armazenagem"
        },
        "xPos" : {
          "type" : "string",
          "description" : "Posição X da localidade de armazenagem"
        },
        "yPos" : {
          "type" : "string",
          "description" : "Posição Y da localidade de armazenagem"
        },
        "zPos" : {
          "type" : "string",
          "description" : "Posição Z da localidade de armazenagem"
        },
        "rack" : {
          "type" : "string",
          "description" : "Rack da localidade de armazenagem"
        },
        "street" : {
          "type" : "string",
          "description" : "Rua da localidade de armazenagem"
        },
        "type" : {
          "type" : "string",
          "description" : "Tipo da localidade de armazenagem"
        },
        "field" : {
          "type" : "string",
          "description" : "Campo da localidade de armazenagem"
        },
        "index" : {
          "type" : "string",
          "description" : "Índice da localidade de armazenagem"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CreateUnitload" : {
      "type" : "object",
      "required" : [ "packageType", "quantity", "riskClass", "unitloadName" ],
      "properties" : {
        "unitloadName" : {
          "type" : "string",
          "description" : "Nome do unitizador"
        },
        "riskClass" : {
          "type" : "string",
          "description" : "Classe de risco contidos no unitizador"
        },
        "barCode" : {
          "type" : "string",
          "description" : "Código de barras do unitizador"
        },
        "packageType" : {
          "type" : "string",
          "description" : "Tipo do pacote"
        },
        "packlist" : {
          "type" : "array",
          "description" : "Lista de itens contidos no unitizador",
          "items" : {
            "$ref" : "#/definitions/Packlist"
          }
        },
        "stackingWeight" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de empilhamento maximo por peso"
        },
        "width" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Largura em milímetros do unitizador"
        },
        "height" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Altura em milímetros do unitizador"
        },
        "depth" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Comprimento em milímetros do unitizador"
        },
        "weightCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Peso em kilos calculado/informado"
        },
        "weight" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Peso do unitizador em kilos"
        },
        "productCategory" : {
          "type" : "string",
          "description" : "A categoria dominante dos produtos contidos dentro do unitizador"
        },
        "notes" : {
          "type" : "string",
          "description" : "Anotações sobre o unitizador"
        },
        "amount" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantia de unitizadores que estão relacionados ao pallet"
        },
        "quantity" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de unitizadores que deverão ser criados, 1 único, 2+ em lote"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Docs" : {
      "type" : "object",
      "properties" : {
        "docId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID dos documentos"
        },
        "nfeKey" : {
          "type" : "string",
          "description" : "Chave da nota fiscal"
        },
        "nfeXmlS3Key" : {
          "type" : "string",
          "description" : "Chave do arquivo da nota fiscal no Bucket S3"
        },
        "cteKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de controle de transporte"
        },
        "cteXmlS3Key" : {
          "type" : "string",
          "description" : "Chave do arquivo de controle de transporte no Bucket S3"
        },
        "mdfeKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de manifesto eletrônico de documento fiscal"
        },
        "mdfeXmlS3Key" : {
          "type" : "string",
          "description" : "Chave do arquivo de manifesto eletrônico de documento fiscal no Bucket S3"
        },
        "insuranceKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de seguro de frete."
        },
        "insuranceDocS3Key" : {
          "type" : "string",
          "description" : "Chave do arquivo de seguro de frete no Bucket S3"
        },
        "theftKey" : {
          "type" : "string",
          "description" : "Chave do arquivo de seguro de roubo."
        },
        "theftDocS3Key" : {
          "type" : "string",
          "description" : "Chave do arquivo de seguro de roubo no Bucket S3"
        },
        "cceKey" : {
          "type" : "string",
          "description" : "Chave da carta de correção"
        },
        "ciotCode" : {
          "type" : "string",
          "description" : "Código Identificador da Operação de Transporte"
        },
        "podName" : {
          "type" : "string",
          "description" : "Nome do recebedor"
        },
        "podFederalTax" : {
          "type" : "string",
          "description" : "CPF do recebedor"
        },
        "podSignS3Key" : {
          "type" : "string",
          "description" : "Prova de entrega, imagem da assinatura do recebedor"
        },
        "podPicS3Key" : {
          "type" : "string",
          "description" : "Prova de entrega, imagem do volume entregue"
        },
        "podDocS3Key" : {
          "type" : "string",
          "description" : "Prova de entrega, documento completo"
        }
      }
    },
    "UpdateShipmentEvents" : {
      "type" : "object",
      "properties" : {
        "transporterMessage" : {
          "type" : "string",
          "description" : "Mensagem do transportador"
        },
        "notes" : {
          "type" : "string",
          "description" : "Anotações sobre o evento da remessa de envio"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "driverUnitloadsCheck" : {
          "type" : "boolean",
          "description" : "Verificação de unitizadores pelo motorista"
        },
        "destinatorUnitloadsCheck" : {
          "type" : "boolean",
          "description" : "Verificação de unitizadores pelo destinatário"
        },
        "dataMatrixCheck" : {
          "type" : "boolean",
          "description" : "Conferência de datamatrix entre motorista e destinatário"
        }
      }
    },
    "CreateTransportOrderRequest" : {
      "type" : "object",
      "properties" : {
        "unitloads" : {
          "type" : "array"
        },
        "locationConfirmed" : {
          "type" : "string",
          "description" : "Endereço de armazenamento sugerido"
        },
        "method" : {
          "type" : "string",
          "description" : "Tipo de método ou tecnologia utilizada"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da ordem"
        },
        "operatorId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do operador que deverá realizar a tarefa"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "storlocId" : {
          "type" : "string",
          "description" : "Indentificação unica para cada Storloc, contendo a informação o nome do storloc assim como o cnpj do cliente ao qual pertence"
        },
        "licensePlate" : {
          "type" : "string",
          "format" : "string",
          "description" : "Placa de Veículo"
        }
      }
    },
    "Task" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "teamId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID da equipe responsavel pela tarefa"
          },
          "shipmentId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID da remessa de envio"
          },
          "firstName" : {
            "type" : "string",
            "description" : "Primeiro nome do usuário"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Sobrenome do usuário"
          },
          "priority" : {
            "type" : "number",
            "format" : "int-32",
            "description" : "Prioridade da entrega"
          },
          "volumeQuantity" : {
            "type" : "number",
            "format" : "int-32",
            "description" : "Número de unitizadores totais para a NFe/Remessa de envio"
          },
          "unitload" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Unitload"
            }
          },
          "destinatorAddress" : {
            "$ref" : "#/definitions/DestinatorAddress"
          }
        }
      }
    },
    "AddressMetrics" : {
      "type" : "array",
      "description" : "Lista de informações de entrega, incluindo detalhes como ID do endereço, ID do cliente, latitude, longitude e quantidade de entregas. O array pode incluir outros objetos com estrutura semelhante.\n",
      "items" : {
        "type" : "object",
        "properties" : {
          "addressId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID do endereço de envio"
          },
          "clientId" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID do cliente 'Transportador'"
          },
          "latitude" : {
            "type" : "string",
            "description" : "Latitude do endereço"
          },
          "longitude" : {
            "type" : "string",
            "description" : "Longitude do endereço"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Quantidade de entregas no endereço"
          }
        }
      }
    },
    "Label" : {
      "type" : "object",
      "properties" : {
        "labelId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da etiqueta"
        },
        "labelName" : {
          "type" : "string",
          "description" : "Nome da etiqueta"
        },
        "document" : {
          "type" : "string",
          "description" : "Código da etiqueta com as devidas variáveis"
        },
        "description" : {
          "type" : "string",
          "description" : "Descrição da etiqueta"
        },
        "jsonConfigurationS3Key" : {
          "type" : "string",
          "description" : "Chave do arquivo JSON da etiqueta"
        },
        "imageS3Key" : {
          "type" : "string",
          "description" : "Chave da imagem ilustrativa da etiqueta"
        },
        "labelFormat" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Formato de extensão da etiqueta"
        },
        "sizeWidth" : {
          "type" : "number",
          "format" : "double",
          "description" : "Largura em milimetros da etiqueta"
        },
        "sizeHeigth" : {
          "type" : "number",
          "format" : "double",
          "description" : "Altura em milimetros da etiqueta"
        },
        "labelType" : {
          "type" : "string",
          "description" : "Tipo da etiqueta"
        }
      }
    },
    "DestinatorAddress" : {
      "type" : "object",
      "properties" : {
        "stateUF" : {
          "type" : "string",
          "description" : "UF do estado do endereço"
        },
        "city" : {
          "type" : "string",
          "description" : "Cidade do endereço"
        },
        "street" : {
          "type" : "string",
          "description" : "Rua do endereço"
        },
        "addressNumber" : {
          "type" : "string",
          "description" : "Número do endereço"
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "Bairro do endereço"
        },
        "zip" : {
          "type" : "string",
          "description" : "CEP do endereço"
        },
        "latitude" : {
          "type" : "string",
          "description" : "Latitude do endereço"
        },
        "longitude" : {
          "type" : "string",
          "description" : "Longitude do endereço"
        }
      }
    },
    "TransportOrder" : {
      "type" : "object",
      "properties" : {
        "transporterOrderId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da ordem de transporte"
        },
        "number" : {
          "type" : "string",
          "description" : "Número da ordem de transporte"
        },
        "orderType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo da ordem"
        },
        "state" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Estado da ordem"
        },
        "unitloadId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do unitizador"
        },
        "sourceId" : {
          "type" : "string",
          "description" : "Endereço de armazenamento de origem"
        },
        "destinationId" : {
          "type" : "string",
          "description" : "Endereço de armazenamento sugerido"
        },
        "destinationConfirmedId" : {
          "type" : "string",
          "description" : "Endereço de armazenamento confirmado"
        },
        "method" : {
          "type" : "string",
          "description" : "Tipo de método ou tecnologia utilizada"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da ordem"
        },
        "operatorId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do operador que deverá realizar a tarefa"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data de criação"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data de modificação"
        }
      }
    },
    "VehicleEvent" : {
      "type" : "object",
      "properties" : {
        "vehicleEventId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do evento do veículo"
        },
        "vehicleId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do veículo"
        },
        "userId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do usuário que registrou o evento"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data de criação"
        },
        "description" : {
          "type" : "string",
          "description" : "Descrição do evento"
        },
        "eventCode" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Código do evento"
        },
        "breakdown" : {
          "type" : "boolean",
          "description" : "Definição de avaria"
        },
        "docImage" : {
          "type" : "string",
          "description" : "Imagem do documento de despesa"
        },
        "docAmount" : {
          "type" : "string",
          "description" : "Valor da despesa do evento"
        },
        "fromLocation" : {
          "type" : "string",
          "description" : "Endereço de origem do evento"
        },
        "toLocation" : {
          "type" : "string",
          "description" : "Endereço de destino do evento"
        },
        "picVehicle" : {
          "type" : "string",
          "description" : "Imagem do veículo"
        },
        "kilometers" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Kilometros rodados atualmente pelo veículo"
        },
        "stationName" : {
          "type" : "string",
          "description" : "Nome da estação de recarga"
        },
        "kwBeforeRecharge" : {
          "type" : "number",
          "format" : "double",
          "description" : "kW antes de ser carregado"
        },
        "kwLoaded" : {
          "type" : "number",
          "format" : "double",
          "description" : "kW carregados"
        },
        "fuelBeforeFill" : {
          "type" : "number",
          "format" : "double",
          "description" : "Combustivel antes de ser abastecido"
        },
        "fuelLoaded" : {
          "type" : "number",
          "format" : "double",
          "description" : "Combustivel abastecido"
        },
        "rechargeTime" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Tempo de recarga em minutos"
        },
        "rechargeCost" : {
          "type" : "string",
          "description" : "Custo da recarga"
        },
        "tires" : {
          "$ref" : "#/definitions/Tires"
        }
      }
    },
    "Vehicle" : {
      "type" : "object",
      "properties" : {
        "vehicleId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do veículo"
        },
        "licensePlate" : {
          "type" : "string",
          "description" : "Placa do veículo"
        },
        "lpnType" : {
          "type" : "string",
          "description" : "Tipo da placa do veículo, Licenciado ou Não Licenciado"
        },
        "manufacturer" : {
          "type" : "string",
          "description" : "Fabricante do veículo"
        },
        "model" : {
          "type" : "string",
          "description" : "Modelo do veiculo"
        },
        "color" : {
          "type" : "string",
          "description" : "Cor predominante do veículo"
        },
        "vehicleTypeId" : {
          "type" : "string",
          "description" : "ID do tipo do veículo"
        },
        "engineType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo do motor utilizado pelo veículo (1-Normal, 2-Elétrico, 3-Híbrido)"
        },
        "name" : {
          "type" : "string",
          "description" : "Nome do tipo do veículo"
        },
        "description" : {
          "type" : "string",
          "description" : "Descrição da recorrência de manutenção do veículo"
        },
        "palletQuantity" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Capacidade de palletes do tipo do veículo"
        },
        "dnitAxleNumber" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de eixos do tipo do veículo"
        },
        "tireNumber" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de pneus do tipo do veículo"
        },
        "dnitCode" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Código do DNIT do tipo do veículo"
        },
        "bodyType" : {
          "type" : "string",
          "description" : "Tipo de carroceria do tipo do veículo"
        },
        "nomenclature" : {
          "type" : "string",
          "description" : "Nomenclatura para identificar as caracteristicas do veículo"
        },
        "vehicleName" : {
          "type" : "string",
          "description" : "Nome do veículo"
        },
        "avgEvaluation" : {
          "type" : "number",
          "format" : "double",
          "description" : "Média das avaliações do veículo"
        },
        "capacityKg" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Capacidade do veículo em kilogramas"
        },
        "capacityVolume" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Capacidade em volume do veículo"
        },
        "recurrenceKillometers" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Recorrência de quilometragem do veículo para manutenção"
        },
        "kilometersNextReview" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Kilometros para a próxima revisão do veículo"
        },
        "event" : {
          "type" : "array",
          "description" : "Eventos do veiculo",
          "items" : {
            "$ref" : "#/definitions/VehicleEvent"
          }
        }
      }
    },
    "ZoneResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "zones" : {
              "type" : "array",
              "description" : "Zonas de localidade de armazenagem",
              "items" : {
                "$ref" : "#/definitions/Zone"
              }
            }
          }
        }
      }
    },
    "CreateClient" : {
      "type" : "object",
      "required" : [ "address", "companyName", "creatorFederalTax", "email", "federalTax", "phone" ],
      "properties" : {
        "companyName" : {
          "type" : "string",
          "description" : "Razão social da empresa"
        },
        "tradeName" : {
          "type" : "string",
          "description" : "Nome fantasia da empresa"
        },
        "prefixCompany" : {
          "type" : "string",
          "description" : "Prefixo da empresa"
        },
        "federalTax" : {
          "type" : "string",
          "description" : "CNPJ da empresa"
        },
        "creatorFederalTax" : {
          "type" : "string",
          "description" : "CPF do usuário criador"
        },
        "email" : {
          "type" : "string",
          "description" : "Email da empresa"
        },
        "phone" : {
          "type" : "string",
          "description" : "Telefone da empresa"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Telefone celular da empresa"
        },
        "notify" : {
          "type" : "boolean",
          "description" : "Disponibilidade para enviar notificação"
        },
        "isShipper" : {
          "type" : "boolean",
          "description" : "Definição de emitente"
        },
        "isDestinator" : {
          "type" : "boolean",
          "description" : "Definição de destinatário"
        },
        "isTransporter" : {
          "type" : "boolean",
          "description" : "Definição de transportador"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "isAggreagate" : {
          "type" : "boolean",
          "description" : "Definição se cliente a ser criado é agregado"
        },
        "address" : {
          "$ref" : "#/definitions/CreateAddress"
        },
        "fingerPrint" : {
          "$ref" : "#/definitions/PostFingerPrint"
        }
      }
    },
    "CreateVehicle" : {
      "type" : "object",
      "required" : [ "category", "color", "licensePlate", "manufacturer", "model" ],
      "properties" : {
        "licensePlate" : {
          "type" : "string",
          "description" : "Placa do veículo"
        },
        "vehicleType" : {
          "type" : "string",
          "description" : "Tipo do veículo"
        },
        "manufacturer" : {
          "type" : "string",
          "description" : "Fabricante do veículo"
        },
        "model" : {
          "type" : "string",
          "description" : "Modelo do veículo"
        },
        "color" : {
          "type" : "string",
          "description" : "Cor predominante do veículo"
        },
        "category" : {
          "type" : "string",
          "description" : "Categoria do veículo"
        },
        "vehicleName" : {
          "type" : "string",
          "description" : "Nome do veículo"
        },
        "capacityKg" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Capacidade do veículo em kilogramas"
        },
        "capacityVolume" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Capacidade em volume do veículo"
        },
        "recurrenceKillometers" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Recorrência de quilometragem do veículo para manutenção"
        },
        "kilometersNextReview" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Kilometros para a próxima revisão do veículo"
        },
        "engineType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo do motor utilizado pelo veículo (1-Normal, 2-Elétrico, 3-Híbrido)"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CreateZone" : {
      "type" : "object",
      "properties" : {
        "zones" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Nome da zona de localidade de armazenagem"
              },
              "useForHubIn" : {
                "type" : "boolean",
                "description" : "Usado para entrada no hub"
              },
              "useForHubOut" : {
                "type" : "boolean",
                "description" : "Usado para saída no hub"
              },
              "useForStorage" : {
                "type" : "boolean",
                "description" : "Usado para armazenagem"
              },
              "useForTransfer" : {
                "type" : "boolean",
                "description" : "Usado para transferência"
              },
              "useForBuffer" : {
                "type" : "boolean",
                "description" : "Usado para buffer"
              },
              "useForDockIn" : {
                "type" : "boolean",
                "description" : "Usado para doca de entrada"
              },
              "useForDockOut" : {
                "type" : "boolean",
                "description" : "Usado para doca de saída"
              },
              "useForGate" : {
                "type" : "boolean",
                "description" : "Usado para portaria"
              },
              "useForYard" : {
                "type" : "boolean",
                "description" : "Usado para pátio"
              },
              "useForSorting" : {
                "type" : "boolean",
                "description" : "Usado para sorter"
              }
            }
          }
        }
      }
    },
    "CreateLabelConfig" : {
      "type" : "object",
      "properties" : {
        "jsonConfiguration" : {
          "type" : "string",
          "format" : "binary"
        },
        "image" : {
          "type" : "string",
          "format" : "binary"
        }
      }
    },
    "CreatePrinter" : {
      "type" : "object",
      "required" : [ "connectionType", "inputType", "ipAddress", "ipPort" ],
      "properties" : {
        "macAddress" : {
          "type" : "string",
          "description" : "Endereço MAC"
        },
        "ipAddress" : {
          "type" : "string",
          "description" : "Endereço IP"
        },
        "ipPort" : {
          "type" : "string",
          "description" : "Porta IP"
        },
        "connectionType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo de conexão"
        },
        "inputType" : {
          "type" : "string",
          "description" : "Tipo de entrada"
        }
      }
    },
    "Client" : {
      "type" : "object",
      "properties" : {
        "clientId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do cliente"
        },
        "labelId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da etiqueta"
        },
        "addressId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do endereço"
        },
        "companyName" : {
          "type" : "string",
          "description" : "Razão social da empresa"
        },
        "tradeName" : {
          "type" : "string",
          "description" : "Nome fantasia da empresa"
        },
        "parentalCompany" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID associativo a alguma empresa transportadora que não pertença a matriz/filiais"
        },
        "prefixCompany" : {
          "type" : "string",
          "description" : "Prefixo do transportador"
        },
        "federalTax" : {
          "type" : "string",
          "description" : "CNPJ da empresa"
        },
        "stateTax" : {
          "type" : "string",
          "description" : "Inscrição estadual da empresa"
        },
        "businessCategory" : {
          "type" : "string",
          "description" : "Categoria de negócios da empresa"
        },
        "isShipper" : {
          "type" : "boolean",
          "description" : "Definição de emitente"
        },
        "isDestinator" : {
          "type" : "boolean",
          "description" : "Definição de destinatário"
        },
        "isTransporter" : {
          "type" : "boolean",
          "description" : "Definição de transportador"
        },
        "isPremium" : {
          "type" : "boolean",
          "description" : "Definição de cliente premium com acesso e visualização do Google Maps"
        },
        "transporterAtShipper" : {
          "type" : "boolean",
          "description" : "Definição se transportador possui como localização o emitente"
        },
        "radiusDelivery" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Raio em metros da distância do local de entrega com o local de destino"
        },
        "podRequired" : {
          "type" : "boolean",
          "description" : "Definição de captura de assinatura pelo transportador"
        },
        "picRequired" : {
          "type" : "boolean",
          "description" : "Definição de captura de foto pelo transportador"
        },
        "checkRequired" : {
          "type" : "boolean",
          "description" : "Definição de conferência dos unitizadores pelo transportador"
        },
        "receiverRequired" : {
          "type" : "boolean",
          "description" : "Definição de solicitação de dados pessoais do recebedor pelo transportador."
        },
        "validateDataMatrixRequired" : {
          "type" : "boolean",
          "description" : "Definição de permissão para geração de código DataMatrix pelo recebedor."
        },
        "shippingCostsEditable" : {
          "type" : "boolean",
          "description" : "Definição de habilitação para edição de valor de carga."
        },
        "vehicleSelectable" : {
          "type" : "boolean",
          "description" : "Definição de visualização para seleção de veículo ideal."
        },
        "enableYard" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Portaria e Pátio"
        },
        "enablePfm" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Movimentação interna"
        },
        "enableAtm" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Rastreamento avançado"
        },
        "enableLp3" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Montagem e otimização de carga em 3D"
        },
        "enableFms" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Sistema de administração de frota"
        },
        "enableAro" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Roteirização e otimização avançada de cargas"
        },
        "enableIds" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Inspeção e documentos"
        },
        "enableBia" : {
          "type" : "boolean",
          "description" : "Definição de cliente habilitado para Business inteligence e analytics"
        },
        "email" : {
          "type" : "string",
          "description" : "Email da empresa"
        },
        "phone" : {
          "type" : "string",
          "description" : "Telefone da empresa"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Telefone celular da empresa"
        },
        "lastNumber" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Último número sequencial para geracao da identificação exclusiva e serializada de unitizadores"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        }
      }
    },
    "TransportOrderResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/TransportOrder"
        }
      }
    },
    "RowTire" : {
      "type" : "object",
      "properties" : {
        "1" : {
          "$ref" : "#/definitions/TireInfo"
        },
        "2" : {
          "$ref" : "#/definitions/TireInfo"
        },
        "3" : {
          "$ref" : "#/definitions/TireInfo"
        }
      }
    },
    "FavoritesListTransporterResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "array",
          "description" : "Favoritos",
          "items" : {
            "$ref" : "#/definitions/FavoritesTransporter"
          }
        }
      }
    },
    "ShipmentEvents" : {
      "type" : "object",
      "properties" : {
        "shipmentEventId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do evento da remessa de envio"
        },
        "shipmentId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da remessa de envio"
        },
        "vehicleId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do veículo que realiza o transporte"
        },
        "unitloadId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do unitizador"
        },
        "eventType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipos de eventos para ordem de entrega"
        },
        "transporterCode" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Código do transportador"
        },
        "transporterMessage" : {
          "type" : "string",
          "description" : "Mensagem do transportador"
        },
        "latitude" : {
          "type" : "string",
          "description" : "Latitude do endereço"
        },
        "longitude" : {
          "type" : "string",
          "description" : "Longitude do endereço"
        },
        "plusCode" : {
          "type" : "string",
          "description" : "Google plus code do endereço"
        },
        "notes" : {
          "type" : "string",
          "description" : "Anotações sobre o evento da remessa de envio"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "RegionResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Region"
        }
      }
    },
    "ShipmentResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Shipment"
        }
      }
    },
    "UnitloadResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Unitload"
        }
      }
    },
    "CreatePodPic" : {
      "type" : "object",
      "properties" : {
        "pic" : {
          "type" : "string",
          "format" : "binary"
        }
      }
    },
    "Shipment" : {
      "type" : "object",
      "properties" : {
        "shipmentId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da remessa de envio"
        },
        "started" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora do inicio da ordem de entrega"
        },
        "finished" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora do fim da ordem de entrega"
        },
        "collectedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora da coleta da ordem de entrega"
        },
        "boardedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora do embarque da ordem de entrega"
        },
        "deliveredDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora da entrega da ordem de entrega"
        },
        "unitloads" : {
          "type" : "array",
          "description" : "Unitizadores pertencentes a remessa de envio",
          "items" : {
            "$ref" : "#/definitions/Unitload"
          }
        },
        "schedCollect" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data agendada para coletar no remetente"
        },
        "schedDelivery" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data agendada para entrega no destinatário"
        },
        "estimatedDeliveryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data estimada pelo embarcador para entrega no destinatário"
        },
        "schedCollectWindowStart" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora apropriada de inicio para coleta no remetente"
        },
        "schedCollectWindowEnd" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora final para coleta no remetente"
        },
        "schedDeliveryWindowStart" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora inicial da janela de entrega para entrega agendada no destinatário"
        },
        "schedDeliveryWindowEnd" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora final da janela de entrega para entrega agendada no destinatário"
        },
        "orderNumber" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Customer Order myWMS"
        },
        "transporter" : {
          "$ref" : "#/definitions/Client"
        },
        "driver" : {
          "$ref" : "#/definitions/User"
        },
        "shipper" : {
          "$ref" : "#/definitions/User"
        },
        "pl3" : {
          "$ref" : "#/definitions/Client"
        },
        "destinator" : {
          "$ref" : "#/definitions/User"
        },
        "doc" : {
          "$ref" : "#/definitions/Docs"
        },
        "boarding" : {
          "$ref" : "#/definitions/CreateBoarding"
        },
        "trackingCode" : {
          "type" : "string",
          "description" : "Código de rastreamento do transportador"
        },
        "salesOrderNumber" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Pedido do ERP"
        },
        "salesChannel" : {
          "type" : "string",
          "description" : "Canal de vendas para conhecimento de origem"
        },
        "ilocCollect" : {
          "type" : "string",
          "description" : "Endereço interno no emitente, normalmente docas de expedição ou pequenos endereços"
        },
        "shipmentOrderType" : {
          "type" : "string",
          "description" : "Tipo de pedido da remessa de envio"
        },
        "shipmentOrderSubType" : {
          "type" : "string",
          "description" : "Subtipo de pedido da remessa de envio"
        },
        "deliveryMethodId" : {
          "type" : "string",
          "description" : "Metodo de entrega do utilizado no pedido da remessa de envio"
        },
        "deliveryMethodExternalId" : {
          "type" : "string",
          "description" : "Método de entrega do utilizado pela transportadora e que será utilizado na remessa de envio"
        },
        "boardingOrder" : {
          "type" : "string",
          "description" : "Ordem de embarque para o mesmo veiculo"
        },
        "destinationPrefix" : {
          "type" : "string",
          "description" : "Prefixo do destino"
        },
        "routeCode" : {
          "type" : "string",
          "description" : "Código da rota do transportador"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da entrega"
        },
        "carrierLevelService" : {
          "type" : "string",
          "description" : "Nivel de serviço"
        },
        "volumeQuantity" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Número de unitizadores totais para a NFe/Remessa de envio"
        },
        "advicePay" : {
          "type" : "boolean",
          "description" : "Aviso de cobrança de frete, CIF ou FOB"
        },
        "orderNotes" : {
          "type" : "string",
          "description" : "Anotações sobre a ordem de entrega"
        },
        "deliveryInstructions" : {
          "type" : "string",
          "description" : "Anotações e instruções sobre a entrega"
        },
        "pickupInstructions" : {
          "type" : "string",
          "description" : "Anotações e instruções sobre a coleta"
        },
        "driverUnitloadsCheck" : {
          "type" : "boolean",
          "description" : "Verificação de unitizadores pelo motorista"
        },
        "destinatorUnitloadsCheck" : {
          "type" : "boolean",
          "description" : "Verificação de unitizadores pelo destinatário"
        },
        "dataMatrixCheck" : {
          "type" : "boolean",
          "description" : "Conferência de datamatrix entre motorista e destinatário"
        },
        "invoiceTotalValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "Valor total da nota"
        },
        "rating" : {
          "type" : "number",
          "format" : "double",
          "description" : "Avaliação da remessa"
        },
        "shipperShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Preço do envio cobrado do cliente"
        },
        "transporterShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Preço do envio cobrado do transportador"
        }
      }
    },
    "CreateShipment" : {
      "type" : "object",
      "required" : [ "advicePay", "destinatorFederalTax", "priority", "shipperFederalTax" ],
      "properties" : {
        "teamId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da equipe responsável pela remessa"
        },
        "nfeKey" : {
          "type" : "string",
          "description" : "Chave da nota fiscal"
        },
        "reverseNfeKey" : {
          "type" : "string",
          "description" : "Chave da nota fiscal da remessa originária da devolução/garantia"
        },
        "shipperFederalTax" : {
          "type" : "string",
          "description" : "CNPJ/CPF do emitente da ordem de entrega"
        },
        "destinatorFederalTax" : {
          "type" : "string",
          "description" : "CNPJ/CPF do destinatário da ordem de entrega"
        },
        "transporterFederalTax" : {
          "type" : "string",
          "description" : "CNPJ do transportador"
        },
        "transporterName" : {
          "type" : "string",
          "description" : "Nome da transportadora"
        },
        "unitloads" : {
          "type" : "array",
          "description" : "Unitizadores pertencentes a remessa de envio",
          "items" : {
            "type" : "string",
            "description" : "Código de barras dos unitizadores"
          }
        },
        "createUnitloads" : {
          "type" : "array",
          "description" : "Criação de unitizadores pertencentes a remessa de envio",
          "items" : {
            "$ref" : "#/definitions/CreateUnitload"
          }
        },
        "schedCollect" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data agendada para coletar no remetente"
        },
        "salesOrderNumber" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Pedido do ERP"
        },
        "salesChannel" : {
          "type" : "string",
          "description" : "Canal de vendas para conhecimento de origem"
        },
        "ilocCollect" : {
          "type" : "string",
          "description" : "Endereço interno no emitente, normalmente docas de expedição ou pequenos endereços"
        },
        "boardingOrder" : {
          "type" : "string",
          "description" : "Ordem de embarque para o mesmo veiculo"
        },
        "orderNumber" : {
          "type" : "string",
          "description" : "Customer Order myWMS"
        },
        "internalControlNumber" : {
          "type" : "string",
          "description" : "Código interno para controle"
        },
        "shipmentOrderSubType" : {
          "type" : "string",
          "description" : "Subtipo de pedido da remessa de envio"
        },
        "deliveryMethodId" : {
          "type" : "string",
          "description" : "Metodo de entrega do utilizado no pedido da remessa de envio"
        },
        "deliveryMethodExternalId" : {
          "type" : "string",
          "description" : "Método de entrega do utilizado pela transportadora e que será utilizado na remessa de envio"
        },
        "routeCode" : {
          "type" : "string",
          "description" : "Código da rota do transportador"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da entrega"
        },
        "advicePay" : {
          "type" : "boolean",
          "description" : "Aviso de cobrança de frete"
        },
        "invoiceTotalValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "Valor total da nota fiscal"
        },
        "transporterShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Valor do frete da parte da transportadora"
        },
        "shipperShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Preço de envio cobrado do emitente"
        },
        "weightCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Peso calculado da cubagem"
        },
        "measuredCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Medições calculados da cubagem"
        },
        "orderNotes" : {
          "type" : "string",
          "description" : "Anotações sobre a ordem de entrega"
        },
        "destinatorName" : {
          "type" : "string",
          "description" : "Nome do destinatário"
        },
        "destinatorPhone" : {
          "type" : "string",
          "description" : "Telefone do destinatário"
        },
        "destinatorAddress" : {
          "$ref" : "#/definitions/CreateAddress"
        },
        "pl3FederalTax" : {
          "type" : "string",
          "description" : "CNPJ do operador logístico da ordem de entrega"
        },
        "pl3Name" : {
          "type" : "string",
          "description" : "Nome do operador logístico"
        },
        "pl3Phone" : {
          "type" : "string",
          "description" : "Telefone do operador logístico"
        },
        "pl3Address" : {
          "$ref" : "#/definitions/CreateAddress"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ShipmentPacklistResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "string",
              "description" : "Próxima chave a ser buscada pela paginação"
            },
            "shipments" : {
              "type" : "array",
              "description" : "Remessas de envio",
              "items" : {
                "$ref" : "#/definitions/ShipmentPacklist"
              }
            }
          }
        }
      }
    },
    "BadRequest" : {
      "properties" : {
        "message" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string",
              "description" : "Texto de retorno"
            },
            "type" : {
              "type" : "string",
              "description" : "Tipo da mensagem"
            },
            "status" : {
              "type" : "number",
              "format" : "int-32",
              "description" : "Status complementar ao tipo."
            }
          }
        }
      }
    },
    "DocsResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Docs"
        }
      }
    },
    "Conflict" : {
      "properties" : {
        "message" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string",
              "description" : "Texto de retorno"
            },
            "type" : {
              "type" : "string",
              "description" : "Tipo da mensagem"
            },
            "status" : {
              "type" : "number",
              "format" : "int-32",
              "description" : "Status complementar ao tipo."
            }
          }
        }
      }
    },
    "ShipmentTrackingCode" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "started" : {
              "type" : "string",
              "format" : "date-time",
              "description" : "Data e hora do inicio da ordem de entrega"
            },
            "finished" : {
              "type" : "string",
              "format" : "date-time",
              "description" : "Data e hora do fim da ordem de entrega"
            },
            "schedCollect" : {
              "type" : "string",
              "format" : "date",
              "description" : "Data agendada para coletar no remetente"
            },
            "collectedDate" : {
              "type" : "string",
              "format" : "date-time",
              "description" : "Data e hora da coleta da ordem de entrega"
            },
            "boardedDate" : {
              "type" : "string",
              "format" : "date-time",
              "description" : "Data e hora do embarque da ordem de entrega"
            },
            "deliveredDate" : {
              "type" : "string",
              "format" : "date-time",
              "description" : "Data e hora da entrega da ordem de entrega"
            },
            "shipmentEvents" : {
              "type" : "array",
              "description" : "Eventos da remessa de envio",
              "items" : {
                "$ref" : "#/definitions/ShipmentEvents"
              }
            },
            "unitloads" : {
              "type" : "array",
              "description" : "Unitizadores pertencentes a remessa de envio",
              "items" : {
                "$ref" : "#/definitions/Unitload"
              }
            },
            "doc" : {
              "$ref" : "#/definitions/Docs"
            },
            "shipper" : {
              "$ref" : "#/definitions/User"
            },
            "destinator" : {
              "$ref" : "#/definitions/User"
            },
            "transporter" : {
              "$ref" : "#/definitions/Client"
            },
            "driver" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "UpdateStorloc" : {
      "type" : "object",
      "properties" : {
        "zoneId" : {
          "type" : "string",
          "description" : "Tipo do unitizador aceito, com finalidade de encaixar as regras na matriz de compatibilidade"
        },
        "area" : {
          "type" : "string",
          "description" : "Área da armazenagem"
        },
        "type" : {
          "type" : "string",
          "description" : "Tipo da localidade de armazenagem"
        },
        "index" : {
          "type" : "string",
          "description" : "Índice da localidade de armazenagem"
        }
      }
    },
    "Region" : {
      "type" : "object",
      "properties" : {
        "regionId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da região"
        },
        "teamId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da equipe"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da região"
        },
        "regionName" : {
          "type" : "string",
          "description" : "Nome da região"
        },
        "regionStateUF" : {
          "type" : "string",
          "description" : "UF do estado da região"
        },
        "city" : {
          "type" : "string",
          "description" : "Cidade da região"
        },
        "prefixCity" : {
          "type" : "string",
          "description" : "Prefixo da cidade da região"
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "Bairro da região"
        },
        "startZip" : {
          "type" : "string",
          "description" : "CEP do início da região"
        },
        "endZip" : {
          "type" : "string",
          "description" : "CEP do final da região"
        }
      }
    },
    "UnitloadPacklist" : {
      "type" : "object",
      "properties" : {
        "unitloadId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do unitizador"
        },
        "createdBy" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do usuário"
        },
        "unitloadType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo do unitizador"
        },
        "unitloadName" : {
          "type" : "string",
          "description" : "Nome do unitizador"
        },
        "barCode" : {
          "type" : "string",
          "description" : "Código de barras do unitizador"
        },
        "riskClass" : {
          "type" : "string",
          "description" : "Classe de risco contidos no unitizador"
        },
        "packageType" : {
          "type" : "string",
          "description" : "Tipo do pacote"
        },
        "opened" : {
          "type" : "boolean",
          "description" : "Definição se unitizador está aberto"
        },
        "packlist" : {
          "type" : "array",
          "description" : "Lista de itens contidos no unitizador",
          "items" : {
            "$ref" : "#/definitions/Packlist"
          }
        },
        "stackingWeight" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de empilhamento máximo por peso"
        },
        "width" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Largura do unitizador em milímetros"
        },
        "height" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Altura do unitizador em milímetros"
        },
        "depth" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Profundidade do unitizador em milímetros"
        },
        "weight" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Peso do unitizador em gramas"
        },
        "weightCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Peso em gramas armazenado"
        },
        "productCategory" : {
          "type" : "string",
          "description" : "A categoria dominante dos produtos contidos dentro do unitizador"
        },
        "trackingCode" : {
          "type" : "string",
          "description" : "Codigo de reastreamento do unitizador"
        },
        "externalCode" : {
          "type" : "string",
          "description" : "Código de barras externo do unitizador"
        },
        "notes" : {
          "type" : "string",
          "description" : "Anotações sobre o unitizador"
        },
        "storlocId" : {
          "type" : "string",
          "description" : "Endereço de armazenamento atual"
        }
      }
    },
    "InternalServer" : {
      "properties" : {
        "message" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string",
              "description" : "Texto de retorno"
            },
            "type" : {
              "type" : "string",
              "description" : "Tipo da mensagem"
            },
            "status" : {
              "type" : "number",
              "format" : "int-32",
              "description" : "Status complementar ao tipo."
            }
          }
        }
      }
    },
    "UpdateBilling" : {
      "type" : "object",
      "properties" : {
        "paymentVerificationCode" : {
          "type" : "string",
          "description" : "Código de verificação de pagamento"
        },
        "paymentMethod" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Método de pagamento"
        }
      }
    },
    "FavoritesResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Favorites"
        }
      }
    },
    "LabelLayoutResponse" : {
      "type" : "object",
      "properties" : {
        "labels" : {
          "type" : "array",
          "description" : "Etiquetas geradas, prontas para realizar a impressão",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ClientResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Client"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do usuário"
        },
        "firstName" : {
          "type" : "string",
          "description" : "Primeiro nome do usuário"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Sobrenome do usuário"
        },
        "federalTax" : {
          "type" : "string",
          "description" : "CPF do usuário"
        },
        "RG" : {
          "type" : "string",
          "description" : "RG do usuário"
        },
        "email" : {
          "type" : "string",
          "description" : "Email do usuário"
        },
        "phone" : {
          "type" : "string",
          "description" : "Telefone do usuário"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Telefone celular do usuário"
        },
        "notify" : {
          "type" : "boolean",
          "description" : "Disponibilidade para enviar notificação"
        },
        "locale" : {
          "type" : "string",
          "description" : "Linguagem utilizada pelo usuário"
        },
        "sumRatingShipper" : {
          "type" : "string",
          "description" : "Média das avaliações de emitente"
        },
        "sumRatingShipment" : {
          "type" : "string",
          "description" : "Média das avaliações de remessas"
        },
        "sumRatingDestinator" : {
          "type" : "string",
          "description" : "Média das avaliações do destinatario"
        },
        "sumRatingDriver" : {
          "type" : "string",
          "description" : "Média das avaliações do motorista"
        },
        "isDriver" : {
          "type" : "boolean",
          "description" : "Definição de motorista"
        },
        "license" : {
          "type" : "string",
          "description" : "CNH do usuário"
        },
        "disability" : {
          "type" : "string",
          "description" : "Possível deficiência"
        },
        "license_valid" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data da validade da CNH do motorista"
        },
        "category" : {
          "type" : "string",
          "description" : "Categoria da CNH do motorista"
        },
        "emiter" : {
          "type" : "string",
          "description" : "Emitente da CNH do motorista"
        },
        "birthDate" : {
          "type" : "string",
          "description" : "Data de nascimento do usuário"
        },
        "vehicle" : {
          "$ref" : "#/definitions/Vehicle"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        }
      }
    },
    "Message" : {
      "properties" : {
        "text" : {
          "type" : "string",
          "description" : "Texto de retorno"
        },
        "type" : {
          "type" : "string",
          "description" : "Tipo da mensagem"
        },
        "status" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Status complementar ao tipo."
        }
      }
    },
    "PrintersResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "printers" : {
              "type" : "array",
              "description" : "Impressoras",
              "items" : {
                "$ref" : "#/definitions/Printers"
              }
            }
          }
        }
      }
    },
    "UpdateAddress" : {
      "type" : "object",
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "País do endereço"
        },
        "stateName" : {
          "type" : "string",
          "description" : "Nome do estado do endereço"
        },
        "stateUF" : {
          "type" : "string",
          "description" : "UF do estado do endereço"
        },
        "city" : {
          "type" : "string",
          "description" : "Cidade do endereço"
        },
        "street" : {
          "type" : "string",
          "description" : "Rua do endereço"
        },
        "addressNumber" : {
          "type" : "string",
          "description" : "Número do endereço"
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "Bairro do endereço"
        },
        "reference" : {
          "type" : "string",
          "description" : "Ponto de referência do endereço"
        },
        "additional" : {
          "type" : "string",
          "description" : "Descrição adicional do endereço"
        },
        "zip" : {
          "type" : "string",
          "description" : "CEP do endereço"
        },
        "plusCode" : {
          "type" : "string",
          "description" : "Google plus code do endereço"
        },
        "locationName" : {
          "type" : "string",
          "description" : "Nome da localidade/local que não possui endereço formal"
        },
        "latitude" : {
          "type" : "string",
          "description" : "Latitude do endereço"
        },
        "longitude" : {
          "type" : "string",
          "description" : "Longitude do endereço"
        },
        "restrictions" : {
          "type" : "string",
          "description" : "Restrição de entrega/coleta de um endereço"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Forbidden" : {
      "properties" : {
        "message" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string",
              "description" : "Texto de retorno"
            },
            "type" : {
              "type" : "string",
              "description" : "Tipo da mensagem"
            },
            "status" : {
              "type" : "number",
              "format" : "int-32",
              "description" : "Status complementar ao tipo."
            }
          }
        }
      }
    },
    "CreateOrUpdateTeam" : {
      "type" : "object",
      "properties" : {
        "teamName" : {
          "type" : "string",
          "description" : "Nome da equipe"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "userId" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "ID do usuário que esta vinculado a organização"
          }
        }
      }
    },
    "UpdateUnitload" : {
      "type" : "object",
      "properties" : {
        "unitloadType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo do unitizador"
        },
        "riskClass" : {
          "type" : "string",
          "description" : "Classe de risco contidos no unitizador"
        },
        "packageType" : {
          "type" : "string",
          "description" : "Tipo do pacote"
        },
        "stackingWeight" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de empilhamento máximo por peso"
        },
        "width" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Largura do unitizador em milímetros"
        },
        "height" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Altura do unitizador em milímetros"
        },
        "depth" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Profundidade do unitizador em milímetros"
        },
        "weight" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Peso do unitizador em gramas"
        },
        "weightCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Peso em gramas  calculado/informado pelo usuário"
        },
        "productCategory" : {
          "type" : "string",
          "description" : "A categoria dominante dos produtos contidos dentro do unitizador"
        },
        "notes" : {
          "type" : "string",
          "description" : "Anotações sobre o unitizador"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "StorlocResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "storlocs" : {
              "type" : "array",
              "description" : "Localidade de armazenagem",
              "items" : {
                "$ref" : "#/definitions/Storloc"
              }
            }
          }
        }
      }
    },
    "CreateLabel" : {
      "type" : "object",
      "required" : [ "labelName", "labelType" ],
      "properties" : {
        "labelName" : {
          "type" : "string",
          "description" : "Nome da etiqueta"
        },
        "labelType" : {
          "type" : "string",
          "description" : "Tipo da etiqueta"
        }
      }
    },
    "TeamResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "$ref" : "#/definitions/Team"
        }
      }
    },
    "ShipmentPacklist" : {
      "type" : "object",
      "properties" : {
        "shipmentId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da remessa de envio"
        },
        "started" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora do inicio da ordem de entrega"
        },
        "finished" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora do fim da ordem de entrega"
        },
        "collectedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora da coleta da ordem de entrega"
        },
        "boardedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora do embarque da ordem de entrega"
        },
        "deliveredDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data e hora da entrega da ordem de entrega"
        },
        "unitloads" : {
          "type" : "array",
          "description" : "Unitizadores pertencentes a remessa de envio",
          "items" : {
            "$ref" : "#/definitions/UnitloadPacklist"
          }
        },
        "schedCollect" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data agendada para coletar no remetente"
        },
        "schedDelivery" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data agendada para entrega no destinatário"
        },
        "estimatedDeliveryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data estimada pelo embarcador para entrega no destinatário"
        },
        "schedCollectWindowStart" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora apropriada de inicio para coleta no remetente"
        },
        "schedCollectWindowEnd" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora final para coleta no remetente"
        },
        "schedDeliveryWindowStart" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora inicial da janela de entrega para entrega agendada no destinatário"
        },
        "schedDeliveryWindowEnd" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora final da janela de entrega para entrega agendada no destinatário"
        },
        "orderNumber" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Customer Order myWMS"
        },
        "transporter" : {
          "$ref" : "#/definitions/Client"
        },
        "driver" : {
          "$ref" : "#/definitions/User"
        },
        "shipper" : {
          "$ref" : "#/definitions/User"
        },
        "destinator" : {
          "$ref" : "#/definitions/User"
        },
        "doc" : {
          "$ref" : "#/definitions/Docs"
        },
        "trackingCode" : {
          "type" : "string",
          "description" : "Código de rastreamento do transportador"
        },
        "salesOrderNumber" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Pedido do ERP"
        },
        "salesChannel" : {
          "type" : "string",
          "description" : "Canal de vendas para conhecimento de origem"
        },
        "ilocCollect" : {
          "type" : "string",
          "description" : "Endereço interno no emitente, normalmente docas de expedição ou pequenos endereços"
        },
        "shipmentOrderType" : {
          "type" : "string",
          "description" : "Tipo de pedido da remessa de envio"
        },
        "shipmentOrderSubType" : {
          "type" : "string",
          "description" : "Subtipo de pedido da remessa de envio"
        },
        "deliveryMethodId" : {
          "type" : "string",
          "description" : "Metodo de entrega do utilizado no pedido da remessa de envio"
        },
        "deliveryMethodExternalId" : {
          "type" : "string",
          "description" : "Método de entrega do utilizado pela transportadora e que será utilizado na remessa de envio"
        },
        "boardingOrder" : {
          "type" : "string",
          "description" : "Ordem de embarque para o mesmo veiculo"
        },
        "destinationPrefix" : {
          "type" : "string",
          "description" : "Prefixo do destino"
        },
        "routeCode" : {
          "type" : "string",
          "description" : "Código da rota do transportador"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da entrega"
        },
        "carrierLevelService" : {
          "type" : "string",
          "description" : "Nivel de serviço"
        },
        "volumeQuantity" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Número de unitizadores totais para a NFe/Remessa de envio"
        },
        "advicePay" : {
          "type" : "boolean",
          "description" : "Aviso de cobrança de frete, CIF ou FOB"
        },
        "orderNotes" : {
          "type" : "string",
          "description" : "Anotações sobre a ordem de entrega"
        },
        "deliveryInstructions" : {
          "type" : "string",
          "description" : "Anotações e instruções sobre a entrega"
        },
        "pickupInstructions" : {
          "type" : "string",
          "description" : "Anotações e instruções sobre a coleta"
        },
        "invoiceTotalValue" : {
          "type" : "string",
          "description" : "Valor total da nota"
        },
        "shipperShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Preço do envio cobrado do cliente"
        },
        "transporterShippingCosts" : {
          "type" : "number",
          "format" : "double",
          "description" : "Preço do envio cobrado do transportador"
        }
      }
    },
    "Unauthorized" : {
      "properties" : {
        "message" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string",
              "description" : "Texto de retorno"
            },
            "type" : {
              "type" : "string",
              "description" : "Tipo da mensagem"
            },
            "status" : {
              "type" : "number",
              "format" : "int-32",
              "description" : "Status complementar ao tipo."
            }
          }
        }
      }
    },
    "UpdateVehicle" : {
      "type" : "object",
      "properties" : {
        "licensePlate" : {
          "type" : "string",
          "description" : "Placa do veículo"
        },
        "color" : {
          "type" : "string",
          "description" : "Cor predominante do veículo"
        },
        "capacityKg" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Capacidade do veículo em kilogramas"
        },
        "capacityVolume" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Capacidade em volume do veículo"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "TireInfo" : {
      "type" : "object",
      "properties" : {
        "pressure" : {
          "type" : "number",
          "format" : "double",
          "description" : "Pressão do pneu"
        },
        "tread" : {
          "type" : "number",
          "format" : "double",
          "description" : "Sulco do pneu"
        }
      }
    },
    "VehicleResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "vehicles" : {
              "type" : "array",
              "description" : "Veiculos",
              "items" : {
                "$ref" : "#/definitions/Vehicle"
              }
            }
          }
        }
      }
    },
    "ShipmentResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "string",
              "description" : "Próxima chave a ser buscada pela paginação"
            },
            "shipments" : {
              "type" : "array",
              "description" : "Remessas de envio",
              "items" : {
                "$ref" : "#/definitions/Shipment"
              }
            }
          }
        }
      }
    },
    "Zone" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Nome da zona de localidade de armazenagem"
        },
        "useForHubIn" : {
          "type" : "boolean",
          "description" : "Usado para entrada no hub"
        },
        "useForHubOut" : {
          "type" : "boolean",
          "description" : "Usado para saída no hub"
        },
        "useForStorage" : {
          "type" : "boolean",
          "description" : "Usado para armazenagem"
        },
        "useForTransfer" : {
          "type" : "boolean",
          "description" : "Usado para transferência"
        },
        "useForBuffer" : {
          "type" : "boolean",
          "description" : "Usado para buffer"
        },
        "useForDockIn" : {
          "type" : "boolean",
          "description" : "Usado para doca de entrada"
        },
        "useForDockOut" : {
          "type" : "boolean",
          "description" : "Usado para doca de saída"
        },
        "useForGate" : {
          "type" : "boolean",
          "description" : "Usado para portaria"
        },
        "useForYard" : {
          "type" : "boolean",
          "description" : "Usado para pátio"
        },
        "useForSorting" : {
          "type" : "boolean",
          "description" : "Usado para sorter"
        }
      }
    },
    "UpdateClient" : {
      "type" : "object",
      "properties" : {
        "tradeName" : {
          "type" : "string",
          "description" : "Nome fantasia da empresa"
        },
        "parentalCompany" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID associativo a alguma empresa transportadora que nao pertenca a matriz/filiais"
        },
        "prefixCompany" : {
          "type" : "string",
          "description" : "Prefixo da empresa"
        },
        "stateTax" : {
          "type" : "string",
          "description" : "Inscrição estadual da empresa"
        },
        "businessCategory" : {
          "type" : "string",
          "description" : "Categoria de negócios da empresa"
        },
        "isShipper" : {
          "type" : "boolean",
          "description" : "Definição de emitente"
        },
        "isDestinator" : {
          "type" : "boolean",
          "description" : "Definição de destinatario"
        },
        "isTransporter" : {
          "type" : "boolean",
          "description" : "Definição de transportador"
        },
        "transporterAtShipper" : {
          "type" : "boolean",
          "description" : "Definição se transportador possui como localização o emitente"
        },
        "transporterAtDestinator" : {
          "type" : "boolean",
          "description" : "Definição se transportador possui como localização o destinatário"
        },
        "radiusDelivery" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Raio em metros da distância do local de entrega com o local de destino"
        },
        "podRequired" : {
          "type" : "boolean",
          "description" : "Definição de captura de assinatura pelo transportador"
        },
        "picRequired" : {
          "type" : "boolean",
          "description" : "Definição de captura de foto pelo transportador"
        },
        "picFailedRequired" : {
          "type" : "boolean",
          "description" : "Definição de captura de foto pelo transportador, quando ha falha"
        },
        "checkRequired" : {
          "type" : "boolean",
          "description" : "Definição de conferência dos unitizadores pelo transportador"
        },
        "receiverRequired" : {
          "type" : "boolean",
          "description" : "Definição de solicitação de dados pessoais do recebedor pelo transportador."
        },
        "shippingCostsEditable" : {
          "type" : "boolean",
          "description" : "Definição de habilitação para edição de valor de carga."
        },
        "validateDataMatrixRequired" : {
          "type" : "boolean",
          "description" : "Definição de permissão para geração de código DataMatrix pelo recebedor."
        },
        "vehicleSelectable" : {
          "type" : "boolean",
          "description" : "Definição de visualização para seleção de veículo ideal."
        },
        "phone" : {
          "type" : "string",
          "description" : "Telefone da empresa"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Telefone celular da empresa"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "address" : {
          "$ref" : "#/definitions/UpdateAddress"
        }
      }
    },
    "Printers" : {
      "type" : "object",
      "properties" : {
        "printerId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da impressora"
        },
        "createdBy" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do criador"
        },
        "name" : {
          "type" : "string",
          "description" : "Nome da impressora"
        },
        "macAddress" : {
          "type" : "string",
          "description" : "Endereço MAC"
        },
        "ipAddress" : {
          "type" : "string",
          "description" : "Endereço IP"
        },
        "ipPort" : {
          "type" : "string",
          "description" : "Porta IP"
        },
        "connectionType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo de conexão"
        },
        "inputType" : {
          "type" : "string",
          "description" : "Tipo de entrada"
        },
        "isFavorite" : {
          "type" : "boolean",
          "description" : "Definição se a impressora é a favorita do usuário"
        }
      }
    },
    "BillingResponseList" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message"
        },
        "content" : {
          "type" : "object",
          "properties" : {
            "billing" : {
              "type" : "array",
              "description" : "Faturas",
              "items" : {
                "$ref" : "#/definitions/Billing"
              }
            }
          }
        }
      }
    },
    "SumShipmentsUnitloads" : {
      "type" : "object",
      "properties" : {
        "sumShipments" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Somatório de remessas entregues pelo motorista"
        },
        "sumUnitloads" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Somatório de unitizadores entregues pelo motorista"
        }
      }
    },
    "Billing" : {
      "type" : "object",
      "properties" : {
        "billingId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da fatura"
        },
        "clientId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do cliente"
        },
        "value" : {
          "type" : "string",
          "description" : "Valor da fatura"
        },
        "paymentVerificationCode" : {
          "type" : "string",
          "description" : "Código de verificação de pagamento"
        },
        "paymentMethod" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Método de pagamento"
        },
        "state" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Estado de pagamento"
        },
        "quantity" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Quantidade de untizadores"
        },
        "issuedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data da criação fatura"
        },
        "dueDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data de vencimento da fatura"
        },
        "paymentDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data de pagamento da fatura"
        }
      }
    },
    "Packlist" : {
      "type" : "object",
      "properties" : {
        "product" : {
          "type" : "string",
          "description" : "Produto"
        },
        "category" : {
          "type" : "string",
          "description" : "Categoria do produto"
        },
        "description" : {
          "type" : "string",
          "description" : "Descrição do item"
        },
        "batch" : {
          "type" : "string",
          "description" : "Lote do item"
        },
        "expirationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data de validade do lote"
        },
        "serial" : {
          "type" : "string",
          "description" : "Serial do item"
        },
        "barCode" : {
          "type" : "string",
          "description" : "Código de barras do item, geralmente EAN13"
        },
        "dun14" : {
          "type" : "string",
          "description" : "Código de barras do item, geralmente DUN14 de paletes, caixas ou grandes volumes"
        },
        "customerStorloc" : {
          "type" : "string",
          "description" : "Endereço de armazenagen do cliente, utilizado para o controle de estoque de matriz e filiais e entre filiais"
        },
        "quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : "Quantidade do item"
        },
        "handlingUnit" : {
          "type" : "string",
          "description" : "Unidade de medida"
        }
      }
    },
    "CreateRegion" : {
      "type" : "object",
      "required" : [ "endZip", "priority", "regionName", "startZip" ],
      "properties" : {
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da região"
        },
        "regionName" : {
          "type" : "string",
          "description" : "Nome da região"
        },
        "regionStateUF" : {
          "type" : "string",
          "description" : "UF do estado da região"
        },
        "city" : {
          "type" : "string",
          "description" : "Cidade da região"
        },
        "neighborhood" : {
          "type" : "string",
          "description" : "Bairro da região"
        },
        "startZip" : {
          "type" : "string",
          "description" : "CEP do início da região"
        },
        "endZip" : {
          "type" : "string",
          "description" : "CEP do final da região"
        }
      }
    },
    "Unitload" : {
      "type" : "object",
      "properties" : {
        "unitloadId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do unitizador"
        },
        "createdBy" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID do usuário"
        },
        "unitloadType" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Tipo do unitizador"
        },
        "unitloadName" : {
          "type" : "string",
          "description" : "Nome do unitizador"
        },
        "barCode" : {
          "type" : "string",
          "description" : "Código de barras do unitizador"
        },
        "riskClass" : {
          "type" : "string",
          "description" : "Classe de risco contidos no unitizador"
        },
        "packageType" : {
          "type" : "string",
          "description" : "Tipo do pacote"
        },
        "opened" : {
          "type" : "boolean",
          "description" : "Definição se unitizador está aberto"
        },
        "stackingWeight" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de empilhamento máximo por peso"
        },
        "width" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Largura do unitizador em milímetros"
        },
        "height" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Altura do unitizador em milímetros"
        },
        "depth" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Profundidade do unitizador em milímetros"
        },
        "weight" : {
          "type" : "number",
          "format" : "int-64",
          "description" : "Peso do unitizador em kilos"
        },
        "weightCalculated" : {
          "type" : "number",
          "format" : "double",
          "description" : "Peso em gramas armazenado"
        },
        "productCategory" : {
          "type" : "string",
          "description" : "A categoria dominante dos produtos contidos dentro do unitizador"
        },
        "trackingCode" : {
          "type" : "string",
          "description" : "Codigo de reastreamento do unitizador"
        },
        "externalCode" : {
          "type" : "string",
          "description" : "Código de barras externo do unitizador"
        },
        "notes" : {
          "type" : "string",
          "description" : "Anotações sobre o unitizador"
        },
        "storlocId" : {
          "type" : "string",
          "description" : "Endereço de armazenamento atual"
        }
      }
    },
    "CreateTransportOrder" : {
      "type" : "object",
      "properties" : {
        "unitloads" : {
          "type" : "array"
        },
        "locationConfirmed" : {
          "type" : "string",
          "description" : "Endereço de armazenamento sugerido"
        },
        "storlocId" : {
          "type" : "string",
          "description" : "Indentificação unica para cada Storloc, contendo a informação o nome do storloc assim como o cnpj do cliente ao qual pertence"
        },
        "licensePlate" : {
          "type" : "string",
          "format" : "string",
          "description" : "Placa de Veículo"
        }
      }
    },
    "Ok" : {
      "properties" : {
        "message" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string",
              "description" : "Texto de retorno"
            },
            "type" : {
              "type" : "string",
              "description" : "Tipo da mensagem"
            },
            "status" : {
              "type" : "number",
              "format" : "int-32",
              "description" : "Status complementar ao tipo."
            }
          }
        }
      }
    },
    "UpdateShipment" : {
      "type" : "object",
      "properties" : {
        "teamId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID da equipe responsável pela remessa"
        },
        "transporterFederalTax" : {
          "type" : "string",
          "description" : "CNPJ do transportador"
        },
        "unitloads" : {
          "type" : "array",
          "description" : "Unitizadores pertencentes a remessa de envio",
          "items" : {
            "type" : "string",
            "description" : "Código de barras dos unitizadores"
          }
        },
        "createUnitloads" : {
          "type" : "array",
          "description" : "Criação de unitizadores pertencentes a remessa de envio",
          "items" : {
            "$ref" : "#/definitions/CreateUnitload"
          }
        },
        "schedCollect" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data agendada para coletar no remetente"
        },
        "schedDelivery" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data agendada para entrega no destinatário"
        },
        "estimatedDeliveryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data estimada pelo embarcador para entrega no destinatário"
        },
        "schedCollectWindowStart" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora apropriada de inicio para coleta no remetente"
        },
        "schedCollectWindowEnd" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora final para coleta no remetente"
        },
        "schedDeliveryWindowStart" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora inicial da janela de entrega para entrega agendada no destinatário"
        },
        "schedDeliveryWindowEnd" : {
          "type" : "string",
          "format" : "time",
          "description" : "Hora final da janela de entrega para entrega agendada no destinatário"
        },
        "deliveryMethodId" : {
          "type" : "string",
          "description" : "Metodo de entrega do utilizado no pedido da remessa de envio"
        },
        "routeCode" : {
          "type" : "string",
          "description" : "Código da rota do transportador"
        },
        "deliveryMethodExternalId" : {
          "type" : "string",
          "description" : "Método de entrega do utilizado pela transportadora e que será utilizado na remessa de envio"
        },
        "priority" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Prioridade da entrega"
        },
        "orderNotes" : {
          "type" : "string",
          "description" : "Anotações sobre a ordem de entrega"
        },
        "deliveryInstructions" : {
          "type" : "string",
          "description" : "Anotações e instruções sobre a entrega"
        },
        "pickupInstructions" : {
          "type" : "string",
          "description" : "Anotações e instruções sobre a coleta"
        },
        "invoiceTotalValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "Valor total da nota fiscal"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CreateNotificationPicking" : {
      "type" : "object",
      "properties" : {
        "federalTaxDestinator" : {
          "type" : "string",
          "description" : "CPF/CNPJ do destinatário"
        },
        "mobilePhoneDestinator" : {
          "type" : "string",
          "description" : "Telefone celular do usuário"
        },
        "orderNumber" : {
          "type" : "string",
          "description" : "Customer Order myWMS"
        },
        "etd" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data prevista para disponibilidade de coleta"
        }
      }
    },
    "CreateShipmentMobile" : {
      "type" : "object",
      "required" : [ "destinatorFederalTax", "nfeKey", "shipperFederalTax" ],
      "properties" : {
        "nfeKey" : {
          "type" : "string",
          "description" : "Chave da nota fiscal"
        },
        "shipperFederalTax" : {
          "type" : "string",
          "description" : "CNPJ/CPF do emitente da ordem de entrega"
        },
        "destinatorFederalTax" : {
          "type" : "string",
          "description" : "CNPJ/CPF do destinatário da ordem de entrega"
        },
        "unitloads" : {
          "type" : "array",
          "description" : "Unitizadores pertencentes a remessa de envio",
          "items" : {
            "type" : "string",
            "description" : "Código de barras dos unitizadores"
          }
        },
        "volumeQuantity" : {
          "type" : "number",
          "format" : "int-32",
          "description" : "Quantidade de volumes que devem ser criados"
        },
        "orderNotes" : {
          "type" : "string",
          "description" : "Anotações sobre a ordem de entrega"
        },
        "destinatorName" : {
          "type" : "string",
          "description" : "Nome do destinatário"
        },
        "destinatorPhone" : {
          "type" : "string",
          "description" : "Telefone do destinatário"
        },
        "destinatorAddress" : {
          "$ref" : "#/definitions/CreateAddress"
        },
        "shipperName" : {
          "type" : "string",
          "description" : "Nome do emitente"
        },
        "shipperPhone" : {
          "type" : "string",
          "description" : "Telefone do emitente"
        },
        "shipperAddress" : {
          "$ref" : "#/definitions/CreateAddress"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "NotFound" : {
      "properties" : {
        "message" : {
          "type" : "object",
          "properties" : {
            "text" : {
              "type" : "string",
              "description" : "Texto de retorno"
            },
            "type" : {
              "type" : "string",
              "description" : "Tipo da mensagem"
            },
            "status" : {
              "type" : "number",
              "format" : "int-32",
              "description" : "Status complementar ao tipo."
            }
          }
        }
      }
    }
  }
}