{
  "openapi": "3.0.2",
  "info": {
    "title": "moreDraw - HTTP",
    "description": "moreDraw - HTTP",
    "version": "0.0.1"
  },
  "tags": [
    {
      "name": "Usuários",
      "description": "Os usuários representam a entidade mais simplória de uma pessoa física.\nEles podem pertencer a equipes sendo possível executar uma tarefa, realizar operações de remetente e destinatário, realizar a gestão de seus unitizadores, etiquetas e favoritos."
    },
    {
      "name": "Image",
      "description": "Componentes Gráficos."
    }
  ],
  "servers": [
    {
      "url": "https://api.moreDraw.com.br/{environment}",
      "variables": {
        "environment": {
          "default": "v1",
          "enum": [
            "dev",
            "v1"
          ]
        }
      }
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "description": "Esta API é utilizada para cadastrar um ou uma lista de novos usuários.\nNecessário informar os atributos do usuário no corpo da requisição.\n\n| Atributo | Descrição | Tipo(tamanho) | Obrigatório\n|--|--|--|--|\n| firstName | Primeiro nome do usuário | String(3-255) | Sim |\n| lastName | Sobrenome do usuário | String(3-255) | Sim |\n| federalTax | CPF do usuário | String(11) | Sim |\n| password | Senha do usuário | String(6,255) | Sim |\n| mobilePhone | Telefone celular do usuário | String(14) | Sim |\n| notify | Disponibilidade para enviar notificação | Boolean | Sim |\n| disability | Possível deficiência | Character | Não |\n| created | Instante da ocorrência do evento, caso nulo será atribuido de acordo com o instante do servidor | DateTime<String> | Não |\n| address | Endereco do usuário | Object | Não |\n| address.country | País do endereço | String<3,255> | Sim |\n| address.stateName | Nome do estado do endereço | String<3,255> | Não |\n| address.stateUF | UF do estado do endereço | String<2> | Sim |\n| address.city | Cidade do endereço | String<3,255> | Sim |\n| address.street | Rua do endereço | String<3,255> | Sim |\n| address.addressNumber | Número do endereço | String<1,255> | Não |\n| address.neighborhood | Bairro do endereço | String<3,255> | Não |\n| address.reference | Ponto de referência do endereço | String<3,255> | Não |\n| address.additional | Descrição adicional do endereço | String<3,255> | Não |\n| address.zip | CEP do endereço | String<8> | Sim |\n| address.locationName | Nome da localidade/local que nao possui endereço formal | String<3,255> | Não |\n| address.restrictions | Restrição de entrega/coleta de um endereço | String<3,255> | Não |\n| users | Lista de objetos de usuários que devem ser criados, com os mesmos atributos destalhados acima | Array<Object> | Sim, quando for necessário criar vários usuário em uma única requisição |",
        "operationId": "postUsers",
        "summary": "Cadastra usuário",
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-postUsers/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário cadastrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ok"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Esta API é utilizada para atualizar os dados de um usuário.\nNecessário informar os atributos do usuário no corpo da requisição.\n\n| Atributo | Descrição | Tipo(tamanho) | Obrigatório\n|--|--|--|--|\n| email | Email do usuário | String(6,255) | Não |\n| phone | Telefone do usuário | String(6,255) | Não |\n| mobilePhone | Telefone celular do usuário | String(14) | Não |\n| notify | Disponibilidade para enviar notificação | Boolean | Não |\n| disability | Possível deficiência | Character | Não |\n| isDriver | Definição de motorista | Boolean | Não |\n| licenseValid | Data da validade da CNH do motorista | String(3,255) | Não |\n| category | Categoria da CNH do motorista | Character | Não |\n| emiter | Emitente da CNH do motorista | String(3,255) | Não |\n| modified | Instante da ocorrência do evento, caso nulo será atribuido de acordo com o instante do servidor | DateTime<String> | Não |\n| address | Endereco do usuário | Object | Não |\n| address.country | País do endereço | String<3,255> | Sim |\n| address.stateName | Nome do estado do endereço | String<3,255> | Não |\n| address.stateUF | UF do estado do endereço | String<2> | Sim |\n| address.city | Cidade do endereço | String<3,255> | Sim |\n| address.street | Rua do endereço | String<3,255> | Sim |\n| address.addressNumber | Número do endereço | String<1,255> | Não |\n| address.neighborhood | Bairro do endereço | String<3,255> | Não |\n| address.reference | Ponto de referência do endereço | String<3,255> | Não |\n| address.additional | Descrição adicional do endereço | String<3,255> | Não |\n| address.zip | CEP do endereço | String<8> | Sim |\n| address.locationName | Nome da localidade/local que nao possui endereço formal | String<3,255> | Não |\n| address.restrictions | Restrição de entrega/coleta de um endereço | String<3,255> | Não |",
        "operationId": "putUsers",
        "summary": "Atualiza usuário",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-putUsers/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Esta API é utilizada para capturar os detalhes de um usuário em específico.",
        "operationId": "getUsers",
        "summary": "Captura usuário",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-getUsers/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "responses": {
          "200": {
            "description": "Usuário capturado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserHistory"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Esta API é utilizada para remover um usuário em específico.",
        "operationId": "deleteUsers",
        "summary": "Remove usuário",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-deleteUsers/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "responses": {
          "204": {
            "description": "Usuário removido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ok"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "tags": [
          "CORS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "$ref": "#/components/schemas/BadRequest",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/schemas/Conflict",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/schemas/InternalServer",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'X-Requested-With,Accept,Origin,Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "| Tipo | Dispositivo |\n| -- | -- |\n| mob | mobile |\n| web | navegador |\n\nEsta API é utilizada para realizar a entrada de um usuário na aplicação.\nNecessário informar as credenciais no corpo da requisição.\nNecessário informar o tipo do dispositivo no corpo da requisição.\n\n| Atributo | Descrição | Tipo(tamanho) | Obrigatório\n|--|--|--|--|\n| mobilePhone | Telefone celular do usuário | String(14) | Sim |\n| password | Senha do usuário | String(6,255) | Sim |\n| federalTax | CNPJ da empresa | String(14) | Mobile Não, Web Sim |\n| type | Tipo do dispositivo | String(3) | Sim |",
        "operationId": "postLoginUsers",
        "summary": "Login",
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-postUsersLogin/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/LoginUser"
                  },
                  {
                    "$ref": "#/components/schemas/LoginClient"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "tags": [
          "CORS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "$ref": "#/components/schemas/BadRequest",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/schemas/InternalServer"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'X-Requested-With,Accept,Origin,Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "description": "Esta API é utilizada para verificar o dispositivo de telefone celular do novo usuário.\nNecessário informar os atributos do usuário no corpo da requisição.\n\n| Atributo | Descrição | Tipo(tamanho) | Obrigatório\n|--|--|--|--|\n| mobilePhone | Telefone celular do usuário | String(14) | Sim |\n| oneTimePassword | Código de verificação do dispositivo telefone celular do usuário | String(6) | Sim |",
        "operationId": "postVerifyUsers",
        "summary": "Verificação dispositivo celular",
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-postUsersVerify/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dispositivo celular autenticado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ok"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Esta API é utilizada para realizar o reenvio do código de verificação do dispositivo do usuário.\nNecessário informar os atributos do código de verificação no corpo da requisição.\n\n| Atributo | Descrição | Tipo(tamanho) | Obrigatório\n|--|--|--|--|\n| mobilePhone | Telefone celular do usuário | String(3,255) | Sim |",
        "operationId": "putUsersVerify",
        "summary": "Cria novo código de verificação",
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-putUsersVerify/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOneTimePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Novo código de verificação gerado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ok"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      },
      "options": {
        "summary": "CORS support",
        "description": "Enable CORS by returning correct headers\n",
        "tags": [
          "CORS"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "204": {
            "description": "Default response for CORS method",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "$ref": "#/components/schemas/BadRequest",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/schemas/InternalServer",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\" : 200\n}\n"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'X-Requested-With,Accept,Origin,Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "{}\n"
              }
            }
          }
        }
      }
    },
    "/users/password/forget": {
      "post": {
        "description": "Esta API é utilizada para iniciar o processo de recuperação / alteração de senha.\nNecessário informar os atributos do usuário no corpo da requisição.\n\n| Atributo | Descrição | Tipo(tamanho) | Obrigatório\n|--|--|--|--|\n| mobilePhone | Telefone celular do usuário | String(14) | Sim |",
        "operationId": "postUsersForgetPassword",
        "summary": "Informa número de celular para iniciar processo de recuparação de senha.",
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-postUsersForgetPassword/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOneTimePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Processo de alteração de senha iniciado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ok"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      }
    },
    "/users/password/verify": {
      "post": {
        "description": "Esta API é utilizada para confirmar a alteração / recuperação da senha do usuário.\nNecessário informar os atributos do usuário no corpo da requisição.\n\n| Atributo | Descrição | Tipo(tamanho) | Obrigatório\n|--|--|--|--|\n| federalTax | CPF do usuário | String(11) | Sim |\n| password | Nova senha do usuário | String(6,255) | Sim |\n| oneTimePassword | Código de verificação do dispositivo telefone celular do usuário | String(6) | Sim |",
        "operationId": "postUsersVerifyPassword",
        "summary": "Informa CPF, nova senha e código de verificação para confirmar processo de recuparação de senha.",
        "tags": [
          "Usuários"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:170387992571:function:${stageVariables.Stage}-postUsersVerifyPassword/invocations",
          "payloadFormatVersion": "2.0",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "connectionType": "INTERNET"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ok"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "$ref": "#/components/headers/Access-Control-Allow-Origin"
              },
              "Access-Control-Allow-Methods": {
                "$ref": "#/components/headers/Access-Control-Allow-Methods"
              },
              "Access-Control-Allow-Headers": {
                "$ref": "#/components/headers/Access-Control-Allow-Headers"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServer"
                }
              }
            }
          }
        }
      }
    }
  },
  "x-amazon-apigateway-binary-media-types": [
    "multipart/form-data",
    "image/jpeg"
  ],
  "x-amazon-apigateway-gateway-responses": {
    "$ref": "./components/default_responses.yml"
  },
  "x-amazon-apigateway-cors": {
    "allowMethods": [
      "DELETE",
      "GET",
      "HEAD",
      "OPTIONS",
      "PATCH",
      "POST",
      "PUT"
    ],
    "allowHeaders": [
      "accept-encoding",
      "accept-language",
      "access-control-allow-headers",
      "access-control-allow-methods",
      "access-control-allow-origin",
      "authorization",
      "content-length",
      "content-type",
      "x-api-key"
    ],
    "maxAge": 0,
    "allowCredentials": false,
    "allowOrigins": [
      "http://*",
      "https://*"
    ]
  },
  "x-amazon-apigateway-importexport-version": "1.0",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "description": "ID do usuário",
            "example": "12345678-1234-1234-1234-123456789012",
            "format": "uuid",
            "type": "string"
          },
          "firstName": {
            "description": "Primeiro nome do usuário",
            "example": "Nome",
            "type": "string"
          },
          "lastName": {
            "description": "Sobrenome do usuário",
            "example": "Sobrenome",
            "type": "string"
          },
          "federalTax": {
            "description": "CPF do usuário",
            "example": "12345678900",
            "type": "string"
          },
          "RG": {
            "description": "RG do usuário",
            "example": "1234567890",
            "type": "string"
          },
          "email": {
            "description": "Email do usuário",
            "example": "nome_sobrenome@mail.com",
            "type": "string"
          },
          "phone": {
            "description": "Telefone do usuário",
            "example": "5500012345678",
            "type": "string"
          },
          "mobilePhone": {
            "description": "Telefone celular do usuário",
            "example": "5500912345678",
            "type": "string"
          },
          "notify": {
            "description": "Disponibilidade para enviar notificação",
            "example": true,
            "type": "boolean"
          },
          "locale": {
            "description": "Linguagem utilizada pelo usuário",
            "example": "PT-BR",
            "type": "string"
          },
          "sumRatingShipper": {
            "description": "Média das avaliações de emitente",
            "example": "4.6",
            "type": "string"
          },
          "sumRatingShipment": {
            "description": "Média das avaliações de remessas",
            "example": "4.7",
            "type": "string"
          },
          "sumRatingDestinator": {
            "description": "Média das avaliações do destinatario",
            "example": "4.8",
            "type": "string"
          },
          "sumRatingDriver": {
            "description": "Média das avaliações do motorista",
            "example": "4.8",
            "type": "string"
          },
          "isDriver": {
            "description": "Definição de motorista",
            "example": false,
            "type": "boolean"
          },
          "license": {
            "description": "CNH do usuário",
            "example": "123456789012345",
            "type": "string"
          },
          "disability": {
            "description": "Possível deficiência",
            "example": "Deficiência visual, auditiva, física",
            "type": "string"
          },
          "license_valid": {
            "description": "Data da validade da CNH do motorista",
            "example": "2020-07-15T",
            "format": "date",
            "type": "string"
          },
          "category": {
            "description": "Categoria da CNH do motorista",
            "example": "B",
            "type": "string"
          },
          "emiter": {
            "description": "Emitente da CNH do motorista",
            "example": "ABCABC-ABC",
            "type": "string"
          },
          "birthDate": {
            "description": "Data de nascimento do usuário",
            "example": "DD/MM/AAAA",
            "type": "string"
          },
          "vehicle": {
            "description": "Veículo atual do usuário",
            "type": "object",
            "$ref": "#/components/schemas/Vehicle"
          },
          "address": {
            "description": "Endereço do usuário",
            "type": "object",
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Email do usuário",
            "example": "nome_sobrenome@mail.com",
            "type": "string"
          },
          "phone": {
            "description": "Telefone do usuário",
            "example": "550012345678",
            "type": "string"
          },
          "mobilePhone": {
            "description": "Telefone celular do usuário",
            "example": "55000912345678",
            "type": "string"
          },
          "notify": {
            "description": "Disponibilidade para enviar notificação",
            "example": true,
            "type": "boolean"
          },
          "disability": {
            "description": "Possível deficiência",
            "example": "Deficiência visual, auditiva, física",
            "type": "string"
          },
          "isDriver": {
            "description": "Definição de motorista",
            "example": false,
            "type": "boolean"
          },
          "license": {
            "description": "CNH do usuário",
            "example": "123456789012345",
            "type": "string"
          },
          "licenseValid": {
            "description": "Data da validade da CNH do motorista",
            "example": "2020-07-15T",
            "format": "date",
            "type": "string"
          },
          "category": {
            "description": "Categoria da CNH do motorista",
            "example": "B",
            "type": "string"
          },
          "emiter": {
            "description": "Emitente da CNH do motorista",
            "example": "ABCABC-ABC",
            "type": "string"
          },
          "locale": {
            "description": "Linguagem utilizada pelo usuário",
            "example": "PT-BR",
            "type": "string"
          },
          "modified": {
            "example": "2020-07-15T20:45:23.506-0300",
            "format": "date-time",
            "type": "string"
          },
          "address": {
            "description": "Endereco do usuário",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreateAddress"
              },
              {
                "$ref": "#/components/schemas/UpdateAddress"
              }
            ]
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "content": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "description": "Primeiro nome do usuário",
            "example": "Nome",
            "type": "string"
          },
          "lastName": {
            "description": "Sobrenome do usuário",
            "example": "Sobrenome",
            "type": "string"
          },
          "federalTax": {
            "description": "CPF do usuário",
            "example": "12345678900",
            "type": "string"
          },
          "password": {
            "description": "Senha do usuário",
            "example": "Senh@Exemplo123",
            "type": "string",
            "format": "password"
          },
          "mobilePhone": {
            "description": "Telefone celular do usuário",
            "example": "5500912345678",
            "type": "string"
          },
          "notify": {
            "description": "Disponibilidade para enviar notificação",
            "example": true,
            "type": "boolean"
          },
          "disability": {
            "description": "Possível deficiência",
            "example": "Deficiência visual, auditiva, física",
            "type": "string"
          },
          "created": {
            "example": "2020-07-15T20:45:23.506-0300",
            "format": "date-time",
            "type": "string"
          },
          "address": {
            "description": "Endereco do usuário",
            "type": "object",
            "$ref": "#/components/schemas/CreateAddress"
          },
          "users": {
            "description": "Lista de usuários",
            "type": "array",
            "items": {
              "description": "Objeto de criação do usuário",
              "type": "object",
              "$ref": "#/components/schemas/CreateUser"
            }
          }
        },
        "required": [
          "firstName",
          "lastName",
          "federalTax",
          "password",
          "mobilePhone"
        ]
      },
      "VerifyUser": {
        "type": "object",
        "properties": {
          "mobilePhone": {
            "description": "Telefone celular do usuário",
            "example": "5500912345678",
            "type": "string"
          },
          "oneTimePassword": {
            "description": "Codigo de verificação do dispositivo telefone celular do usuário",
            "example": "123456",
            "type": "string",
            "format": "string"
          }
        }
      },
      "GenerateOneTimePassword": {
        "type": "object",
        "properties": {
          "mobilePhone": {
            "description": "Telefone celular do usuário",
            "example": "5500912345678",
            "type": "string"
          }
        }
      },
      "VerifyPassword": {
        "type": "object",
        "properties": {
          "federalTax": {
            "description": "CPF do usuário",
            "example": "12345678900",
            "type": "string"
          },
          "password": {
            "description": "Senha do usuário",
            "example": "Senh@Exemplo123",
            "type": "string",
            "format": "password"
          },
          "oneTimePassword": {
            "description": "Codigo de verificação do dispositivo telefone celular do usuário",
            "example": "123456",
            "type": "string",
            "format": "string"
          }
        },
        "required": [
          "federalTax",
          "password",
          "oneTimePassword"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "addressId": {
            "description": "ID do endereço",
            "example": "12345678-1234-1234-1234-123456789012",
            "format": "uuid",
            "type": "string"
          },
          "createdBy": {
            "description": "ID do criador do endereço",
            "example": "12345678-1234-1234-1234-123456789012",
            "format": "uuid",
            "type": "string"
          },
          "country": {
            "description": "País do endereço",
            "example": "Pais",
            "type": "string"
          },
          "stateName": {
            "description": "Nome do estado do endereço",
            "example": "Estado",
            "type": "string"
          },
          "stateUF": {
            "description": "UF do estado do endereço",
            "example": "UF",
            "type": "string"
          },
          "city": {
            "description": "Cidade do endereço",
            "example": "Cidade",
            "type": "string"
          },
          "prefixCity": {
            "description": "Prefixo da cidade do endereço",
            "example": "Cid",
            "type": "string"
          },
          "street": {
            "description": "Rua do endereço",
            "example": "Rua Exemplo",
            "type": "string"
          },
          "addressNumber": {
            "description": "Número do endereço",
            "example": "123",
            "type": "string"
          },
          "neighborhood": {
            "description": "Bairro do endereço",
            "example": "Bairro Exemplo",
            "type": "string"
          },
          "reference": {
            "description": "Ponto de referência do endereço",
            "example": "Referência Exemplo",
            "type": "string"
          },
          "additional": {
            "description": "Descrição adicional do endereço",
            "example": "Descrição adicional de Exemplo",
            "type": "string"
          },
          "zip": {
            "description": "CEP do endereço",
            "example": "12345789",
            "type": "string"
          },
          "plusCode": {
            "description": "Google plus code do endereço",
            "example": "583C694V+RP",
            "type": "string"
          },
          "locationName": {
            "description": "Nome da localidade/local que não possui endereço formal",
            "example": "Localidade Exemplo - 12345",
            "type": "string"
          },
          "coordinates": {
            "description": "Coordenadas (latitude, longitude) do endereço",
            "example": [
              [
                "-28.793043370422325",
                "-51.605825771273764"
              ]
            ],
            "type": "string"
          },
          "latitude": {
            "description": "Latitude do endereço",
            "example": "-28.793043370422325",
            "type": "string"
          },
          "longitude": {
            "description": "Longitude do endereço",
            "example": "-51.605825771273764",
            "type": "string"
          },
          "restrictions": {
            "description": "Restrição de entrega/coleta de um endereço",
            "example": "Trajeto/Localização/Endereço com restrição de entrega/coleta",
            "type": "string"
          }
        }
      },
      "CreateAddress": {
        "type": "object",
        "properties": {
          "country": {
            "description": "País do endereço",
            "example": "Pais",
            "type": "string"
          },
          "stateName": {
            "description": "Nome do estado do endereço",
            "example": "Estado",
            "type": "string"
          },
          "stateUF": {
            "description": "UF do estado do endereço",
            "example": "UF",
            "type": "string"
          },
          "city": {
            "description": "Cidade do endereço",
            "example": "Cidade",
            "type": "string"
          },
          "street": {
            "description": "Rua do endereço",
            "example": "Rua Exemplo",
            "type": "string"
          },
          "addressNumber": {
            "description": "Número do endereço",
            "example": "123",
            "type": "string"
          },
          "neighborhood": {
            "description": "Bairro do endereço",
            "example": "Bairro Exemplo",
            "type": "string"
          },
          "reference": {
            "description": "Ponto de referência do endereço",
            "example": "Referencia Exemplo",
            "type": "string"
          },
          "additional": {
            "description": "Descrição adicional do endereço",
            "example": "Descrição adicional de Exemplo",
            "type": "string"
          },
          "zip": {
            "description": "CEP do endereço",
            "example": "12345789",
            "type": "string"
          },
          "locationName": {
            "description": "Nome da localidade/local que nao possui endereço formal",
            "example": "Localidade Exemplo - 12345",
            "type": "string"
          },
          "restrictions": {
            "description": "Restrição de entrega/coleta de um endereço",
            "example": "Trajeto/Localização/Endereço com restrição de entrega/coleta",
            "type": "string"
          },
          "latitude": {
            "description": "Latitude do endereço",
            "example": "-28.793043370422325",
            "type": "string"
          },
          "longitude": {
            "description": "Longitude do endereço",
            "example": "-51.605825771273764",
            "type": "string"
          },
          "plusCode": {
            "description": "Google plus code do endereço",
            "example": "583C694V+RP",
            "type": "string"
          },
          "created": {
            "example": "2020-07-15T20:45:23.506-0300",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "userId",
          "country",
          "stateName",
          "stateUF",
          "city",
          "street",
          "addressNumber",
          "neighborhood",
          "zip"
        ]
      },
      "UpdateAddress": {
        "type": "object",
        "properties": {
          "country": {
            "description": "País do endereço",
            "example": "Pais",
            "type": "string"
          },
          "stateName": {
            "description": "Nome do estado do endereço",
            "example": "Estado",
            "type": "string"
          },
          "stateUF": {
            "description": "UF do estado do endereço",
            "example": "UF",
            "type": "string"
          },
          "city": {
            "description": "Cidade do endereço",
            "example": "Cidade",
            "type": "string"
          },
          "street": {
            "description": "Rua do endereço",
            "example": "Rua Exemplo",
            "type": "string"
          },
          "addressNumber": {
            "description": "Número do endereço",
            "example": "123",
            "type": "string"
          },
          "neighborhood": {
            "description": "Bairro do endereço",
            "example": "Bairro Exemplo",
            "type": "string"
          },
          "reference": {
            "description": "Ponto de referência do endereço",
            "example": "Referência Exemplo",
            "type": "string"
          },
          "additional": {
            "description": "Descrição adicional do endereço",
            "example": "Descrição adicional de Exemplo",
            "type": "string"
          },
          "zip": {
            "description": "CEP do endereço",
            "example": "12345789",
            "type": "string"
          },
          "plusCode": {
            "description": "Google plus code do endereço",
            "example": "583C694V+RP",
            "type": "string"
          },
          "locationName": {
            "description": "Nome da localidade/local que não possui endereço formal",
            "example": "Localidade Exemplo - 12345",
            "type": "string"
          },
          "latitude": {
            "description": "Latitude do endereço",
            "example": "-28.793043370422325",
            "type": "string"
          },
          "longitude": {
            "description": "Longitude do endereço",
            "example": "-51.605825771273764",
            "type": "string"
          },
          "restrictions": {
            "description": "Restrição de entrega/coleta de um endereço",
            "example": "Trajeto/Localização/Endereço com restrição de entrega/coleta",
            "type": "string"
          },
          "modified": {
            "example": "2020-07-15T20:45:23.506-0300",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "mobilePhone": {
            "description": "Telefone celular do usuário",
            "example": "5500912345678",
            "type": "string"
          },
          "password": {
            "description": "Senha do usuário",
            "example": "Senh@Exemplo123",
            "type": "string",
            "format": "password"
          },
          "type": {
            "description": "Tipo do dispositivo",
            "example": "mob/web",
            "type": "string"
          }
        }
      },
      "LoginClient": {
        "type": "object",
        "properties": {
          "federalTax": {
            "description": "CNPJ da empresa",
            "example": "12345678000099",
            "type": "string"
          },
          "mobilePhone": {
            "description": "Telefone celular do usuário",
            "example": "5500912345678",
            "type": "string"
          },
          "password": {
            "description": "Senha da empresa",
            "example": "Senh@Exemplo123",
            "type": "string",
            "format": "password"
          },
          "type": {
            "description": "Tipo do dispositivo",
            "example": "mob/web",
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "content": {
            "properties": {
              "jwt": {
                "description": "JWT token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                "type": "string"
              },
              "firstName": {
                "description": "Primeiro nome do usuário",
                "example": "Nome",
                "type": "string"
              },
              "lastName": {
                "description": "Sobrenome do usuário",
                "example": "Sobrenome",
                "type": "string"
              },
              "federalTax": {
                "description": "CPF do usuário",
                "example": "12345678900",
                "type": "string"
              },
              "mobilePhone": {
                "description": "Telefone celular do usuário",
                "example": "5500912345678",
                "type": "string"
              },
              "homePage": {
                "description": "Página Home",
                "example": "Shipments",
                "type": "string"
              },
              "avgPunctual": {
                "description": "Média das avaliações do motorista em pontualidade",
                "example": 4.5,
                "format": "double",
                "type": "number"
              },
              "avgLabor": {
                "description": "Média das avaliações do motorista em qualidade",
                "example": 4.6,
                "format": "double",
                "type": "number"
              },
              "avgPresentation": {
                "description": "Média das avaliações do motorista em apresentacao",
                "example": 4.7,
                "format": "double",
                "type": "number"
              },
              "avgAttitude": {
                "description": "Média das avaliações do motorista em comportamento/atitudes",
                "example": 4.8,
                "format": "double",
                "type": "number"
              },
              "isDriver": {
                "description": "Definição de motorista",
                "example": false,
                "type": "boolean"
              },
              "transporterAtShipper": {
                "description": "Definição se transportador possui como localização o emitente",
                "example": false,
                "type": "boolean"
              },
              "radiusDelivery": {
                "description": "Raio em metros da distância do local de entrega com o local de destino",
                "example": 500,
                "type": "number",
                "format": "int-32"
              },
              "gpsInterval": {
                "description": "Frequência de atualização da posição geográfica do motorista",
                "example": 30,
                "type": "number",
                "format": "int-32"
              },
              "license": {
                "description": "CNH do usuário",
                "example": "123456789012345",
                "type": "string"
              },
              "license_valid": {
                "description": "Data da validade da CNH do motorista",
                "example": "2020-07-15T",
                "format": "date",
                "type": "string"
              },
              "category": {
                "description": "Categoria da CNH do motorista",
                "example": "B",
                "type": "string"
              },
              "emiter": {
                "description": "Emitente da CNH do motorista",
                "example": "ABCABC-ABC",
                "type": "string"
              },
              "ratingEmitter": {
                "description": "Avaliação do remetente. Quem avalia é o motorista ou destinatário",
                "example": 3.5,
                "format": "double",
                "type": "number"
              },
              "ratingShipment": {
                "description": "Avaliação da qualidade da remessa. Quem avalia é o destinatário",
                "example": 4.5,
                "format": "double",
                "type": "number"
              },
              "ratingDestinator": {
                "description": "Avaliação do destinatário. Quem avalia é o motorista",
                "example": 4,
                "format": "double",
                "type": "number"
              },
              "ratingDriver": {
                "description": "Avaliação do motorista. Quem avalia é o destinatário",
                "example": 5,
                "format": "double",
                "type": "number"
              },
              "vehicle": {
                "description": "Veículo atual do usuário",
                "type": "object",
                "$ref": "#/components/schemas/Vehicle"
              },
              "fingerPrint": {
                "description": "Informações de sessão e dispositivo do usuário",
                "type": "object",
                "$ref": "#/components/schemas/FingerPrint"
              },
              "clients": {
                "type": "array",
                "items": {
                  "properties": {
                    "companyName": {
                      "description": "Nome da empresa",
                      "example": "Empresa",
                      "type": "string"
                    },
                    "tradeName": {
                      "description": "Nome fantasia da empresa",
                      "example": "Empresa",
                      "type": "string"
                    },
                    "prefixCompany": {
                      "description": "Prefixo do transportador",
                      "example": "CMP",
                      "type": "string"
                    },
                    "federalTax": {
                      "description": "CNPJ da empresa",
                      "example": "12345678000099",
                      "type": "string"
                    },
                    "apiKey": {
                      "description": "ApiKey da empresa",
                      "example": "XXeTewoxUI1d6qpxvbmyl8qBltZi6S251QCpmh4Q",
                      "type": "string"
                    },
                    "operatorType": {
                      "description": "Tipo do operador",
                      "example": "A",
                      "type": "string"
                    },
                    "successfulDeliveries": {
                      "description": "Quantidade de sucesso em entregas",
                      "example": 5,
                      "format": "int-32",
                      "type": "number"
                    },
                    "wrongDeliveries": {
                      "description": "Quantidade de entregas com falha",
                      "example": 1,
                      "format": "int-32",
                      "type": "number"
                    },
                    "isShipper": {
                      "description": "Definição de emitente",
                      "example": true,
                      "type": "boolean"
                    },
                    "isDestinator": {
                      "description": "Definição de destinatário",
                      "example": false,
                      "type": "boolean"
                    },
                    "isTransporter": {
                      "description": "Definição de transportador",
                      "example": true,
                      "type": "boolean"
                    },
                    "ratingEmitter": {
                      "description": "Avaliação do remetente. Quem avalia é o motorista ou destinatário",
                      "example": 3.5,
                      "format": "double",
                      "type": "number"
                    },
                    "ratingShipment": {
                      "description": "Avaliação da qualidade da remessa. Quem avalia é o destinatário",
                      "example": 4.5,
                      "format": "double",
                      "type": "number"
                    },
                    "ratingDestinator": {
                      "description": "Avaliação do destinatário. Quem avalia é o motorista",
                      "example": 4,
                      "format": "double",
                      "type": "number"
                    },
                    "isPremium": {
                      "description": "Definição de cliente premium com acesso e visualização do Google Maps",
                      "example": true,
                      "type": "boolean"
                    },
                    "podRequired": {
                      "description": "Definição de captura de assinatura pelo transportador",
                      "example": false,
                      "type": "boolean"
                    },
                    "picRequired": {
                      "description": "Definição de captura de foto pelo transportador",
                      "example": false,
                      "type": "boolean"
                    },
                    "checkRequired": {
                      "description": "Definição de conferência dos unitizadores pelo transportador",
                      "example": false,
                      "type": "boolean"
                    },
                    "receiverRequired": {
                      "description": "Definição de solicitação de dados pessoais do recebedor pelo transportador.",
                      "example": false,
                      "type": "boolean"
                    },
                    "validateDataMatrixRequired": {
                      "description": "Definição de permissão para geração de código DataMatrix pelo recebedor.",
                      "example": false,
                      "type": "boolean"
                    },
                    "enableYard": {
                      "description": "Definição de cliente habilitado para Portaria e Pátio",
                      "example": false,
                      "type": "boolean"
                    },
                    "enablePfm": {
                      "description": "Definição de cliente habilitado para Movimentação interna",
                      "example": false,
                      "type": "boolean"
                    },
                    "enableAtm": {
                      "description": "Definição de cliente habilitado para Rastreamento avançado",
                      "example": false,
                      "type": "boolean"
                    },
                    "enableLp3": {
                      "description": "Definição de cliente habilitado para Montagem e otimização de carga em 3D",
                      "example": false,
                      "type": "boolean"
                    },
                    "enableFms": {
                      "description": "Definição de cliente habilitado para Sistema de administração de frota",
                      "example": false,
                      "type": "boolean"
                    },
                    "enableAro": {
                      "description": "Definição de cliente habilitado para Roteirização e otimização avançada de cargas",
                      "example": false,
                      "type": "boolean"
                    },
                    "enableIds": {
                      "description": "Definição de cliente habilitado para Inspeção e documentos",
                      "example": false,
                      "type": "boolean"
                    },
                    "enableBia": {
                      "description": "Definição de cliente habilitado para Business inteligence e analytics",
                      "example": false,
                      "type": "boolean"
                    },
                    "address": {
                      "description": "Endereço da empresa",
                      "type": "object",
                      "$ref": "#/components/schemas/Address"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreatePodPic": {
        "type": "object",
        "properties": {
          "pic": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "imageId": {
            "description": "Identificação numérica da imagem.",
            "example": "ab1cd2ef-34gh-56ij-78kl-mn910opqrs12",
            "type": "string"
          },
          "imageName": {
            "description": "Nome da imagem.",
            "example": "Pátio02",
            "type": "string"
          },
          "groupBy": {
            "description": "Data de criação.",
            "example": "Pátio/Veículos/Docas",
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "description": "Descrição da Imagem.",
            "example": "Mapa de visão superior",
            "type": "string"
          },
          "imageUrl": {
            "description": "Especifica o caminho para a imagem.",
            "example": "path/to/background.jpg",
            "type": "string"
          },
          "created": {
            "description": "Data de criação.",
            "example": "2024-10-20T07:25:00.000+0000",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "description": "ID do cliente que criou o registro.",
            "example": "ab1cd2ef-34gh-56ij-78kl-mn910opqrs12",
            "format": "uuid",
            "type": "string"
          },
          "modified": {
            "description": "Data de modificação.",
            "example": "2024-10-22T19:50:00.000+0000",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Message": {
        "properties": {
          "text": {
            "description": "Texto de retorno",
            "example": "Texto de retorno exemplo SUCESSO - OK/CREATED/NO_CONTENT.",
            "type": "string"
          },
          "type": {
            "description": "Tipo da mensagem",
            "example": "success",
            "type": "string"
          },
          "status": {
            "description": "Status complementar ao tipo.",
            "example": 200,
            "type": "number",
            "format": "int-32"
          }
        }
      },
      "Ok": {
        "properties": {
          "message": {
            "properties": {
              "text": {
                "description": "Texto de retorno",
                "example": "Texto de retorno exemplo SUCESSO - OK / CREATED / NO_CONTENT.",
                "type": "string"
              },
              "type": {
                "description": "Tipo da mensagem",
                "example": "success",
                "type": "string"
              },
              "status": {
                "description": "Status complementar ao tipo.",
                "example": 200,
                "type": "number",
                "format": "int-32"
              }
            }
          }
        }
      },
      "BadRequest": {
        "properties": {
          "message": {
            "properties": {
              "text": {
                "description": "Texto de retorno",
                "example": "Texto de retorno exemplo AVISO - BAD_REQUEST.",
                "type": "string"
              },
              "type": {
                "description": "Tipo da mensagem",
                "example": "warning",
                "type": "string"
              },
              "status": {
                "description": "Status complementar ao tipo.",
                "example": 400,
                "type": "number",
                "format": "int-32"
              }
            }
          }
        }
      },
      "Unauthorized": {
        "properties": {
          "message": {
            "properties": {
              "text": {
                "description": "Texto de retorno",
                "example": "Texto de retorno exemplo AVISO - UNAUTHORIZED.",
                "type": "string"
              },
              "type": {
                "description": "Tipo da mensagem",
                "example": "warning",
                "type": "string"
              },
              "status": {
                "description": "Status complementar ao tipo.",
                "example": 401,
                "type": "number",
                "format": "int-32"
              }
            }
          }
        }
      },
      "Forbidden": {
        "properties": {
          "message": {
            "properties": {
              "text": {
                "description": "Texto de retorno",
                "example": "Texto de retorno exemplo AVISO - FORBIDDEN.",
                "type": "string"
              },
              "type": {
                "description": "Tipo da mensagem",
                "example": "warning",
                "type": "string"
              },
              "status": {
                "description": "Status complementar ao tipo.",
                "example": 403,
                "type": "number",
                "format": "int-32"
              }
            }
          }
        }
      },
      "NotFound": {
        "properties": {
          "message": {
            "properties": {
              "text": {
                "description": "Texto de retorno",
                "example": "Texto de retorno exemplo AVISO - NOT_FOUND.",
                "type": "string"
              },
              "type": {
                "description": "Tipo da mensagem",
                "example": "warning",
                "type": "string"
              },
              "status": {
                "description": "Status complementar ao tipo.",
                "example": 404,
                "type": "number",
                "format": "int-32"
              }
            }
          }
        }
      },
      "Conflict": {
        "properties": {
          "message": {
            "properties": {
              "text": {
                "description": "Texto de retorno",
                "example": "Texto de retorno exemplo AVISO - CONFLICT.",
                "type": "string"
              },
              "type": {
                "description": "Tipo da mensagem",
                "example": "warning",
                "type": "string"
              },
              "status": {
                "description": "Status complementar ao tipo.",
                "example": 409,
                "type": "number",
                "format": "int-32"
              }
            }
          }
        }
      },
      "InternalServer": {
        "properties": {
          "message": {
            "properties": {
              "text": {
                "description": "Texto de retorno",
                "example": "Texto de retorno exemplo ERRO - INTERNAL_SERVER.",
                "type": "string"
              },
              "type": {
                "description": "Tipo da mensagem",
                "example": "error",
                "type": "string"
              },
              "status": {
                "description": "Status complementar ao tipo.",
                "example": 500,
                "type": "number",
                "format": "int-32"
              }
            }
          }
        }
      }
    },
    "headers": {
      "Access-Control-Allow-Origin": {
        "schema": {
          "description": "Acesso à origem",
          "type": "string"
        }
      },
      "Access-Control-Allow-Methods": {
        "schema": {
          "description": "Acesso aos metodos",
          "type": "string"
        }
      },
      "Access-Control-Allow-Headers": {
        "schema": {
          "description": "Acesso aos cabeçalhos",
          "type": "string"
        }
      }
    }
  }
}
