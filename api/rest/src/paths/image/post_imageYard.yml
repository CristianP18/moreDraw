description: |
  Esta API é utilizada para cadastrar um novo imagea de pátio.
  Necessário informar os atributos do imagea no corpo da requisição.
  
  | Atributo               | Descrição                                                               | Tipo(tamanho)       | Obrigatório |
  |------------------------|-------------------------------------------------------------------------|---------------------|-------------|
  | imageId                | Identificação numérica do imagea                                        | Integer             | Sim         |
  | imageName              | Nome do imagea                                                          | String(3-255)       | Sim         |
  | groupBy                | Grupo ao qual a Imagem pertence                                         | String(3-255)       | Sim         |
  | description            | Descrição da Imagem                                                     | String(3-255)       | Sim         |
  | imageUrl               | Url da Imagem                                                           | String(3-255)       | Sim         |
  | created                | Data de criação                                                         | DateTime<String>    | Não         |
  | createdBy              | ID do cliente que criou o registro                                      | String              | Não         |
  | modified               | Data de modificação                                                     | DateTime<String>    | Não         |

operationId: postImage
summary: Cadastra uma nova imagem
security:
  - bearerAuth: []
tags:
  - Image
x-amazon-apigateway-integration:
  uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:576199001204:function:${stageVariables.Stage}-postImage/invocations"
  passthroughBehavior: "when_no_match"
  httpMethod: "POST"
  type: "aws_proxy"
requestBody:
  required: true
  content:
    multipart/form-data:
      schema:
        type: object
        properties:
          picImage:
            type: string
            format: binary
            description: A imagem que será enviada
          jsonImage:
            type: string
            description: |
              Os metadados da imagem no formato JSON:
              ```json
              {
                "imageId": 123,
                "imageName": "Exemplo de Imagem",
                "groupBy": "Grupo Teste",
                "description": "Uma descrição de teste"
              }
              ```
        required:
          - picImage
          - jsonImage
      encoding:
        jsonImage:
          contentType: application/json
      examples:
        exemplo1:
          summary: Requisição de exemplo
          description: Um exemplo com JSON e arquivo
          value:
            picImage: (Arquivo binário)
            jsonImage: |
              {
                "imageId": 123,
                "imageName": "Exemplo de Imagem",
                "groupBy": "Grupo Teste",
                "description": "Uma descrição de teste"
              }

responses:
  '200':
    description: Imagea de pátio cadastrado com sucesso
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Image'
    headers:
      Access-Control-Allow-Origin:
        $ref: '#/components/headers/Access-Control-Allow-Origin'
      Access-Control-Allow-Methods:
        $ref: '#/components/headers/Access-Control-Allow-Methods'
      Access-Control-Allow-Headers:
        $ref: '#/components/headers/Access-Control-Allow-Headers'
  '400':
    description: BadRequest
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/BadRequest'
  '401':
    description: Unauthorized
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Unauthorized'
  '404':
    description: NotFound
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/NotFound'
  '500':
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/InternalServer'
